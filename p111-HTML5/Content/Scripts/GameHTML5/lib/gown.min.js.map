{"version":3,"sources":["../../lib/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/core/Control.js","gown.min.js","src/core/Skinable.js","src/core/controls/Application.js","src/core/controls/Button.js","src/core/controls/CheckBox.js","src/core/controls/InputControl.js","src/core/controls/LayoutGroup.js","src/core/controls/ScrollArea.js","src/core/controls/ScrollBar.js","src/core/controls/ScrollThumb.js","src/core/controls/Scrollable.js","src/core/controls/Slider.js","src/core/controls/TextInput.js","src/core/controls/ToggleButton.js","src/core/index.js","src/core/layout/HorizontalLayout.js","src/core/layout/Layout.js","src/core/layout/LayoutAlignment.js","src/core/layout/TiledColumnsLayout.js","src/core/layout/TiledLayout.js","src/core/layout/TiledRowsLayout.js","src/core/layout/VerticalLayout.js","src/core/layout/ViewPortBounds.js","src/core/shapes/Diamond.js","src/core/shapes/Ellipse.js","src/core/shapes/Line.js","src/core/shapes/Rect.js","src/core/shapes/Shape.js","src/core/skin/Theme.js","src/core/skin/ThemeFont.js","src/src/index.js","src/utils/InputWrapper.js","src/utils/ScaleContainer.js","src/utils/SliderData.js","src/utils/index.js","src/utils/mixin.js","src/utils/mouseWheelSupport.js","src/utils/position.js","src/utils/resizeScaling.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","GOWN","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"Control","PIXI","Container","enabled","interactive","prototype","Object","create","constructor","setTheme","theme","invalidSkin","updateTransform","redraw","mousePos","data","getLocalPosition","defineProperty","get","_enabled","set","value","_width","width","_height","height",2,"Skinable","skinCache","undefined","invalidState","initResizeScaling","resizeScaling","mixin","controlSetTheme","preloadSkins","changeSkin","skin","_currentSkin","_lastSkin","addChildAt","alpha","fromSkin","name","callback","getSkin","skinName","_skinName","../utils/mixin","../utils/resizeScaling","./Control",3,"Application","background","fullscreen","renderer","stage","innerWidth","innerHeight","autoDetectRenderer","backgroundColor","document","body","appendChild","view","_stage","_renderer","addChild","animate","render","requestAnimationFrame","_createGradientRect","gradient","bgCanvas","createElement","ctx","getContext","linearGradient","createLinearGradient","addColorStop","fillStyle","fillRect","Texture","fromCanvas","cleanup","removeCanvas","removeChild","_removeBackground","onresize","resize","bg","children","child","_fullscreen","removeEventListener","_onresize","bind","addEventListener","_background","Array","Sprite","../Control",4,"Button","SKIN_NAME","_validStates","stateNames","handleEvent","updateLabel","touchstart","mousedown","touchend","mouseupoutside","mouseup","touchendoutside","mouseout","UP","DOWN","HOVER","mousemove","mouseover","updateDimensions","worldWidth","worldHeight","hitArea","Rectangle","labelText","scaleY","style","fontSize","textStyle","updateLabelDimensions","type","currentState","_pressed","_over","hoverSkin","redrawSkinable","createLabel","text","_label","clone","Text","x","Math","floor","y","skinableSetTheme","font","labelFont","color","labelColor","_currentState","indexOf","label","../Skinable",5,"CheckBox","preselected","concat","selectedStateNames","selected","_mousedown","SELECTED_UP","SELECTED_DOWN","SELECTED_HOVER","index","state","_selected","toggleSelected","change",6,"InputControl","InputWrapper","createInput","hasFocus","_mouseDown","_clipPos","currentInput","onKeyUp","onKeyDown","clickPos","pixiText","totalWidth","pos","textWidth","posToCoord","substring","_isBitmapFont","prevCharCode","_data","charCode","charCodeAt","charData","chars","kerning","xAdvance","_scale","context","measureText","focus","blur","onfocus","_hasFocus","onMouseUpOutside","onblur","../../utils/InputWrapper",7,"LayoutGroup","percentWidth","percentHeight","_viewPortBounds","ViewPortBounds","_needUpdate","dimensionChanged","explicitWidth","explicitHeight","layout","needUpdate","re","addSpacer","space","spacer","childIsRenderAble","updateRenderable","j","renderable","getChildAt","max","../layout/ViewPortBounds",8,"ScrollArea","content","addListener","scrolldelta","bar","mask","_useMask","scrolldirection","SCROLL_AUTO","touchmove","LayoutAlignment","SCROLL_VERTICAL","SCROLL_HORIZONTAL","layoutHorizontalAlign","alignment","HORIZONTAL_ALIGNMENT","upright","direction","scrollAuto","scroll","_scrollContent","contentMoved","min","updateBar","thumb","mouseData","_start","updateMask","Graphics","drawMask","clear","Point","toGlobal","beginFill","drawRect","endFill","invalid","_content","../layout/LayoutAlignment",9,"ScrollBar","scrollArea","orientation","Scrollable","HORIZONTAL","VERTICAL_ALIGNMENT","VERTICAL","scrollableredraw","invalidTrack","thumbMoved","./Scrollable",10,"ScrollThumb","scrollable","defaultSkin","thumbSkin","THUMB_STATES","thumbSize","touchdown","originalCurrentState","getOwnPropertyDescriptor","buttonmousedown","local","stopPropagation","buttonmousemove","handleMove","buttonmouseup","handleUp","showTrack","getBounds","move","isNaN","maxWidth","maxHeight","./Button",11,"mode","DESKTOP_MODE","_inverse","handleDown","MOBILE_MODE","center","target","moveThumb","handleWheel","event","delta","_updateProgressSkin","progressSkin","progressPosX","inverse","progressPosY","showProgress","./ScrollThumb",12,"Slider","_minimum","_maximum","step","page","_value","minimum","SliderData","pixelToValue","position","maximum","valueToPixel","sliderData","../../utils/SliderData",13,"TextInput","displayAsPassword","_displayAsPassword","_cursorTimer","_cursorNeedsUpdate","blinkInterval","selection","cursor","selectionBg","boundOnMouseUp","onMouseUp","boundOnMouseUpOutside","boundOnMouseDown","onMouseDown","boundOnMouseMove","onMouseMove","_text","_origText","replace","setText","_maxChars","setMaxLength","maxChars","setType","updateSelection","start","end","setSelection","updateSelectionBg","onSubmit","keyCode","which","ctrlKey","metaKey","preventDefault","updateTextState","setCursorPos","cursorPos","drawCursor","time","Date","now","visible","mouse","selectionStart","curPos","originalEvent","getText","sel","getSelection","./InputControl",14,"ToggleButton","slice","push","substr","toggle","buttonHandleEvent",15,"HorizontalLayout","Layout","TiledColumnsLayout","TiledLayout","TiledRowsLayout","VerticalLayout","Diamond","Ellipse","Line","Rect","Shape","Theme","./Skinable","./controls/Application","./controls/Button","./controls/CheckBox","./controls/InputControl","./controls/LayoutGroup","./controls/ScrollArea","./controls/ScrollBar","./controls/ScrollThumb","./controls/Scrollable","./controls/Slider","./controls/TextInput","./controls/ToggleButton","./layout/HorizontalLayout","./layout/Layout","./layout/LayoutAlignment","./layout/TiledColumnsLayout","./layout/TiledLayout","./layout/TiledRowsLayout","./layout/VerticalLayout","./layout/ViewPortBounds","./shapes/Diamond","./shapes/Ellipse","./shapes/Line","./shapes/Rect","./shapes/Shape","./skin/Theme",16,"./LayoutAlignment",17,"gap","padding","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","ALIGN_JUSTIFY","VERTICAL_ALIGN_BOTTOM","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","_gap","_paddingLeft","_paddingRight","_paddingBottom","_paddingTop","items","viewPortBounds",18,"applyPercent","explicit","itemPercent","item","_hor","itemCount","remaining","totalExplicit","totalPercent","itemSpace","_firstGap","_lastGap","percentToPixels","_currentGap","NaN","explicitSpace","paddingStart","./Layout",19,"_paging","PAGING_VERTICAL","_orientation","ORIENTATION_COLUMNS","_verticalGap","_horizontalGap","./TiledLayout",20,"_useSquareTiles","_tileHorizontalAlign","TILE_HORIZONTAL_ALIGN_CENTER","_tileVerticalAlign","TILE_VERTICAL_ALIGN_MIDDLE","PAGING_NONE","ORIENTATION_ROWS","TILE_VERTICAL_ALIGN_TOP","TILE_VERTICAL_ALIGN_BOTTOM","TILE_VERTICAL_ALIGN_JUSTIFY","TILE_HORIZONTAL_ALIGN_LEFT","TILE_HORIZONTAL_ALIGN_RIGHT","TILE_HORIZONTAL_ALIGN_JUSTIFY","PAGING_HORIZONTAL","_rows","Number","POSITIVE_INFINITY","tileWidth","tileHeight","itemWidth","itemHeight","availableWidth","availableHeight","horizontalTileCount","verticalTileCount","startX","startY","perPage","pageIndex","nextPageStartIndex","pageStart","positionX","positionY","itemIndex","useSquareTiles",21,22,23,24,"_drawShape","graphics","moveTo","lineTo","./Shape",25,"drawEllipse",26,"reverse","_reverse",27,"radius","_radius","drawRoundedRect",28,"_color","_alpha","applyColor","drawBorder","border","lineStyle","borderColor",29,"_skins","ThemeFont","textureCache","ScaleContainer","setSkin","comp","id","loadImage","jsonPath","_jsonPath","loader","add","load","loadComplete","resources","textures","getScaleContainer","grid","scope","texture","getImage","removeTheme","../../utils/ScaleContainer","./ThemeFont",30,"key","OPTIONS","fill","_fontFamily","_fontSize","_updateFont","_font",31,"console","warn","core","utils","./core","./utils",32,"hiddenInput","input","tabindex","opacity","pointerEvents","left","bottom","top","zIndex","textProp","selectionEnd","_selection","txt","removeAttribute","setAttribute","_maxLength","_type","getType",33,"rect","baseTexture","frame","lw","mw","rw","th","ch","bh","tl","_getTexture","tm","tr","cl","cm","cr","bl","bm","br","_updateScales","_positionTilable","scaleOriginals","scaleOriginal","elem","w","h","rightX","bottomY","middleWidth","centerHeight","fromFrame","frameId","TextureCache",34,35,"mouseWheelSupport","./InputWrapper","./ScaleContainer","./SliderData","./mixin","./mouseWheelSupport","./position","./resizeScaling",36,"destination","source","hasOwnProperty","configurable",37,"enable","canvas","_mouseWheelHandler","wheelDelta","detail","getObjectsUnderPoint","mouseX","mouseY","mouseMove","attachEvent","detachEvent",38,"centerVertical","parent","centerHorizontal",39,"minWidth","minHeight","_lastWidth","_lastHeight","wt","worldTransform","scaleX","pt","sqrt","pow","b","c","d","round","DisplayObject","tx","ty","scale"],"mappings":"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","file":"gown.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * base for all UI controls (see controls/)\n * based on pixi-DisplayContainer that supports adding children, so all\n * controls are container\n * @class Control\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\nfunction Control() {\n PIXI.Container.call(this);\n this.enabled = this.enabled !== false;\n // assume all controls are interactive\n this.interactive = true;\n}\n\nControl.prototype = Object.create( PIXI.Container.prototype );\nControl.prototype.constructor = Control;\nmodule.exports = Control;\n\n/**\n * change the theme (every control can have a theme, even if it does not\n * inherit Skinable, e.g. if there is only some color in the skin that will\n * be taken)\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nControl.prototype.setTheme = function(theme) {\n if (theme === this.theme && theme) {\n return;\n }\n\n this.theme = theme;\n this.invalidSkin = true;\n};\n\n/**\n * PIXI method to update the object transform for rendering\n * Used to call redraw() before rendering\n *\n * @method updateTransform\n */\nControl.prototype.updateTransform = function() {\n if(this.redraw) {\n this.redraw();\n }\n\n PIXI.Container.prototype.updateTransform.call(this);\n};\n\n/**\n * get local mouse position from PIXI.InteractionData\n *\n * @method mousePos\n * @returns {PIXI.Point}\n */\nControl.prototype.mousePos = function(e) {\n return e.data.getLocalPosition(this);\n};\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nControl.prototype.redraw = function() {\n};\n\n/**\n * Enables/Disables the control.\n * (not implemented yet)\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Control.prototype, 'enabled', {\n get: function() {\n return this._enabled;\n },\n set: function(value) {\n this._enabled = value;\n }\n});\n\n\n//var originalWidth = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'width');\n\n/**\n * The width of the shape, setting this will redraw the component.\n * (set redraw)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'width', {\n get: function() {\n return this._width;\n //return originalWidth.get.call(this);\n },\n set: function(width) {\n this._width = width;\n //originalWidth.set.call(this, width);\n }\n});\n\n//var originalHeight = Object.getOwnPropertyDescriptor(PIXI.DisplayObjectContainer.prototype, 'height');\n\n/**\n * The height of the shape, setting this will redraw the component.\n * (set redraw)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Control.prototype, 'height', {\n get: function() {\n //return originalHeight.get.call(this);\n return this._height;\n },\n set: function(height) {\n //originalHeight.set.call(this, height);\n this._height = height;\n }\n});\n",null,"var Control = require('./Control');\nvar resizeScaling = require('../utils/resizeScaling');\nvar mixin = require('../utils/mixin');\n\n/**\n * Control that requires a theme (e.g. a button)\n *\n * @class Skinable\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction Skinable(theme) {\n Control.call(this);\n this.skinCache = {};\n this.setTheme(theme || GOWN.theme);\n\n if (this.theme === undefined) {\n throw new Error('you need to define a theme first');\n }\n\n // invalidate state so the control will be redrawn next time\n this.invalidState = true; // draw for the first time\n\n this.initResizeScaling();\n}\n\nSkinable.prototype = Object.create( Control.prototype );\nSkinable.prototype.constructor = Skinable;\nmodule.exports = Skinable;\n\nSkinable.prototype.controlSetTheme = Control.prototype.setTheme;\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nSkinable.prototype.setTheme = function(theme) {\n if (theme === this.theme && theme) {\n return;\n }\n\n this.controlSetTheme(theme);\n this.preloadSkins();\n // force states to redraw\n this.invalidState = true;\n};\n\n/**\n * remove old skin and add new one\n *\n * @method changeSkin\n * @param skin {DisplayObject}\n */\nSkinable.prototype.changeSkin = function(skin) {\n if (this._currentSkin !== skin) {\n this._lastSkin = this._currentSkin;\n this.addChildAt(skin, 0);\n skin.alpha = 1.0;\n this._currentSkin = skin;\n\n }\n this.invalidState = false;\n};\n\n/**\n * initiate all skins first\n *\n * @method preloadSkins\n */\nSkinable.prototype.preloadSkins = function() {\n};\n\n/**\n * get image from skin (will execute a callback with the loaded skin\n * when it is loaded or call it directly when it already is loaded)\n *\n * @method fromSkin\n * @param name name of the state\n * @param callback callback that is executed if the skin is loaded\n */\nSkinable.prototype.fromSkin = function(name, callback) {\n var skin;\n if (this.skinCache[name]) {\n skin = this.skinCache[name];\n } else {\n skin = this.theme.getSkin(this.skinName, name);\n this.skinCache[name] = skin;\n }\n if (skin) {\n callback.call(this, skin);\n }\n // TODO: what, if the skin is not loaded jet? --> execute callback after load\n};\n\n\nmixin(Skinable.prototype, resizeScaling);\n\n/**\n * change the skin name\n * You normally set the skin name as constant in your control, but if you\n * want you can set another skin name to change skins for single components\n * at runtime.\n *\n * @property skinName\n * @type String\n */\nObject.defineProperty(Skinable.prototype, 'skinName', {\n get: function() {\n return this._skinName;\n },\n set: function(value) {\n if ( this._skinName === value ) {\n return;\n }\n this._skinName = value;\n this.invalidState = true;\n }\n});\n","var Control = require('../Control');\n\n/**\n * entry point for your application, makes some assumptions, (e.g. that you\n * always want fullscreen) and shortcuts some fancy stuff like a gradient\n * background.\n *\n * @class Application\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n * @param background {Number | Array} a background color or a list of colors\n * that will be used as vertical gradient\n * @param fullscreen {Boolean}\n * @param renderer {WebGLRenderer|CanvasRenderer}\n * @param stage {Stage}\n */\nfunction Application(background, fullscreen, renderer, stage) {\n if (!stage || !renderer) {\n stage = new PIXI.Container();\n var width = 800;\n var height = 600;\n if (fullscreen) {\n width = window.innerWidth;\n height = window.innerHeight;\n }\n renderer = PIXI.autoDetectRenderer(\n width, height, {backgroundColor : 0xffffff});\n document.body.appendChild(renderer.view);\n }\n /* jshint ignore:start */\n this._stage = stage;\n this._renderer = renderer;\n /* jshint ignore:end */\n this._width = renderer.width;\n this._height = renderer.height;\n\n Control.call(this);\n stage.addChild(this);\n this.animate();\n\n this.background = background;\n this.fullscreen = fullscreen || false;\n}\n\nApplication.prototype = Object.create( Control.prototype );\nApplication.prototype.constructor = Application;\nmodule.exports = Application;\n\n/**\n * call requestAnimationFrame to render the application at max. FPS\n *\n * @method animate\n */\n/* jshint ignore:start */\nApplication.prototype.animate = function() {\n var renderer = this._renderer;\n var stage = this._stage;\n var animate = function() {\n renderer.render(stage);\n requestAnimationFrame(animate);\n };\n requestAnimationFrame(animate);\n};\n/* jshint ignore:end */\n\n/**\n * creates a gradient rect that can be used as background\n * (uses a separate canvas to create a new Texture)\n *\n * @method _createGradientRect\n * @private\n */\nApplication.prototype._createGradientRect = function(gradient, width, height) {\n var bgCanvas = document.createElement('canvas');\n bgCanvas.width = width || 256;\n bgCanvas.height = height || 256;\n var ctx = bgCanvas.getContext('2d');\n var linearGradient = ctx.createLinearGradient(0, 0, 0, bgCanvas.height);\n for (var i = 0; i < gradient.length; i++) {\n linearGradient.addColorStop(i, gradient[i]);\n }\n ctx.fillStyle = linearGradient;\n ctx.fillRect(0, 0, bgCanvas.width, bgCanvas.height);\n return PIXI.Texture.fromCanvas(bgCanvas);\n};\n\n/**\n * clean application: remove event listener, free memory\n * (can also remove the canvas from the DOM tree if wanted)\n *\n * @method cleanup\n * @param removeCanvas destroys the canvas and remove it from the dom tree\n */\nApplication.prototype.cleanup = function(removeCanvas) {\n removeCanvas = removeCanvas || true;\n if (removeCanvas) {\n document.body.removeChild(this._renderer.view);\n }\n this._stage = null;\n this._renderer = null;\n this._removeBackground();\n this.fullscreen = false; // remove event listener\n};\n\n/**\n * called when the browser window / the application is resized\n *\n * @method onresize\n */\nApplication.prototype.onresize = function() {\n this._width = window.innerWidth;\n this._height = window.innerHeight;\n this._renderer.resize(this._width, this._height);\n if (this.bg) {\n this.bg.width = this._width;\n this.bg.height = this._height;\n }\n for (var i = 0; i < this.children.length; i++) {\n var child = this.children[i];\n if (child.onresize) {\n child.onresize(this._width, this._height);\n }\n }\n};\n\n/**\n * remove background\n * @method _removeBackground\n * @private\n */\nApplication.prototype._removeBackground = function() {\n if (this.bg) {\n this.removeChild(this.bg);\n this.bg = null;\n }\n};\n\n/**\n * set fullscreen and resize to screen size\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'fullscreen', {\n get: function() {\n return this._fullscreen;\n },\n set: function(value) {\n if (this._fullscreen && !value) {\n window.removeEventListener('resize', this._onresize);\n } else if (!this._fullscreen && value) {\n this._onresize = this.onresize.bind(this);\n window.addEventListener('resize', this._onresize);\n }\n this._fullscreen = value;\n }\n});\n\n/**\n * set and draw background\n *\n * @property enabled\n * @type Boolean\n */\nObject.defineProperty(Application.prototype, 'background', {\n get: function() {\n return this._background;\n },\n set: function(value) {\n if (value === this._background) {\n return;\n }\n this._removeBackground();\n if (value instanceof Array) {\n this.bg = new PIXI.Sprite(this._createGradientRect(value));\n this.bg.width = this._width;\n this.bg.height = this._height;\n this.addChildAt(this.bg, 0);\n } else {\n this._renderer.backgroundColor = value;\n }\n this._background = value;\n }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic Button with 3 states (up, down and hover) and a label that is\n * centered on it\n *\n * @class Button\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction Button(theme, skinName) {\n this.skinName = skinName || Button.SKIN_NAME;\n this._validStates = this._validStates || Button.stateNames;\n Skinable.call(this, theme);\n this.handleEvent('up');\n\n this.updateLabel = false; // label text changed\n\n this.touchstart = this.mousedown;\n this.touchend = this.mouseupoutside = this.mouseup;\n this.touchendoutside = this.mouseout;\n}\n\nButton.prototype = Object.create( Skinable.prototype );\nButton.prototype.constructor = Button;\nmodule.exports = Button;\n\n// name of skin that will be applied\nButton.SKIN_NAME = 'button';\n\n// Identifier for the different button states\n/**\n * Up state: mouse button is released or finger is removed from the screen\n *\n * @property UP\n * @static\n * @final\n * @type String\n */\nButton.UP = 'up';\n\n/**\n * Down state: mouse button is pressed or finger touches the screen\n *\n * @property DOWN\n * @static\n * @final\n * @type String\n */\nButton.DOWN = 'down';\n\n/**\n * Hover state: mouse pointer hovers over the button\n * (ignored on mobile)\n *\n * @property HOVER\n * @static\n * @final\n * @type String\n */\nButton.HOVER = 'hover';\n\n/**\n * names of possible states for a button\n *\n * @property stateNames\n * @static\n * @final\n * @type String\n */\nButton.stateNames = [\n Button.DOWN, Button.HOVER, Button.UP\n];\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nButton.prototype.preloadSkins = function() {\n for (var i = 0; i < this._validStates.length; i++) {\n var name = this._validStates[i];\n var skin = this.theme.getSkin(this.skinName, name);\n this.skinCache[name] = skin;\n if (skin) {\n this.addChildAt(skin, 0);\n skin.alpha = 0.0;\n if (this.width) {\n skin.width = this.width;\n }\n if (this.height) {\n skin.height = this.height;\n }\n }\n }\n};\n\nButton.prototype.mousedown = function() {\n this.handleEvent(Button.DOWN);\n};\n\nButton.prototype.mouseup = function() {\n this.handleEvent(Button.UP);\n};\n\nButton.prototype.mousemove = function() {\n};\n\nButton.prototype.mouseover = function() {\n this.handleEvent(Button.HOVER);\n};\n\nButton.prototype.mouseout = function() {\n this.handleEvent('out');\n};\n\n\n/**\n * update width/height of the button\n *\n * @method updateDimensions\n */\nButton.prototype.updateDimensions = function() {\n var width = this.worldWidth;\n var height = this.worldHeight;\n if (this.hitArea) {\n this.hitArea.width = width;\n this.hitArea.height = height;\n } else {\n this.hitArea = new PIXI.Rectangle(0, 0, width, height);\n }\n for (var i = 0; i < this._validStates.length; i++) {\n var name = this._validStates[i];\n var skin = this.skinCache[name];\n if (skin) {\n skin.width = width;\n skin.height = height;\n }\n }\n\n if(this.labelText) {\n var scaleY = height / this._height;\n this.labelText.style.fontSize = this.theme.textStyle.fontSize * scaleY;\n this.labelText.style = this.labelText.style; // trigger setter\n this.updateLabelDimensions();\n }\n};\n\n/**\n * handle one of the mouse/touch events\n *\n * @method handleEvent\n * @param type one of the valid states\n */\nButton.prototype.handleEvent = function(type) {\n if (!this._enabled) {\n return;\n }\n if (type === Button.DOWN) {\n this.currentState = Button.DOWN;\n this._pressed = true;\n } else if (type === Button.UP) {\n this._pressed = false;\n if (this._over && this.theme.hoverSkin) {\n this.currentState = Button.HOVER;\n } else {\n this.currentState = Button.UP;\n }\n } else if (type === Button.HOVER) {\n this._over = true;\n if (this._pressed) {\n this.currentState = Button.DOWN;\n } else if (this.theme.hoverSkin) {\n this.currentState = Button.HOVER;\n }\n } else { // type === rollout and default\n if (this._over) {\n this._over = false;\n }\n this.currentState = Button.UP;\n }\n};\n\n// performance increase to avoid using call.. (10x faster)\nButton.prototype.redrawSkinable = Skinable.prototype.redraw;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nButton.prototype.redraw = function() {\n if (this.updateLabel) {\n this.createLabel();\n }\n this.redrawSkinable();\n};\n\n/**\n * create/update a label for this button\n *\n * @method createLabel\n */\nButton.prototype.createLabel = function() {\n if(this.labelText) {\n this.labelText.text = this._label;\n this.labelText.style = this.theme.textStyle.clone();\n } else {\n this.labelText = new PIXI.Text(this._label, this.theme.textStyle.clone());\n this.addChild(this.labelText);\n }\n this.updateLabelDimensions();\n this.updateLabel = false;\n};\n\n/**\n * create/update the position of the label\n *\n * @method updateLabelDimensions\n */\nButton.prototype.updateLabelDimensions = function () {\n if (this.labelText && this.labelText.text) {\n this.labelText.x = Math.floor((this.worldWidth - this.labelText.width) / 2);\n this.labelText.y = Math.floor((this.worldHeight - this.labelText.height) / 2);\n }\n};\n\nButton.prototype.skinableSetTheme = Skinable.prototype.setTheme;\n\n/**\n * change the theme\n *\n * @method setTheme\n * @param theme the new theme {Theme}\n */\nButton.prototype.setTheme = function(theme) {\n // this theme has other font or color settings - update the label\n if (this.labelText) {\n this.updateLabel = (this.updateLabel ||\n this.labelText.font !== this.theme.labelFont ||\n this.labelText.color !== this.theme.labelColor );\n }\n this.skinableSetTheme(theme);\n};\n\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(Button.prototype, 'currentState',{\n get: function() {\n return this._currentState;\n },\n set: function(value) {\n if (this._currentState === value) {\n return;\n }\n if (this._validStates.indexOf(value) < 0) {\n throw new Error('Invalid state: ' + value + '.');\n }\n this._currentState = value;\n // invalidate state so the next draw call will redraw the control\n this.invalidState = true;\n }\n});\n\n/**\n * Create/Update the label of the button.\n *\n * @property label\n * @type String\n */\nObject.defineProperty(Button.prototype, 'label', {\n get: function() {\n return this._label;\n },\n set: function(label) {\n if(this._label === label) {\n return;\n }\n this._label = label;\n this.updateLabel = true;\n }\n});\n","var Skinable = require('../Skinable');\n\n/**\n * The basic CheckBox with 3 normal states (up, down and hover)\n * and 3 selected states (selected_up, selected_down and selected_hover)\n *\n * @class CheckBox\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction CheckBox(preselected, theme, skinName) {\n this.skinName = skinName || CheckBox.SKIN_NAME;\n this._validStates = this._validStates || CheckBox.stateNames.concat(CheckBox.selectedStateNames);\n Skinable.call(this, theme);\n\n this._currentState = 'up';\n this.selected = preselected || false;\n this._mousedown = false;\n\n this.touchstart = this.mousedown;\n this.touchend = this.mouseupoutside = this.mouseup;\n this.touchendoutside = this.mouseout;\n}\n\nCheckBox.prototype = Object.create( Skinable.prototype );\nCheckBox.prototype.constructor = CheckBox;\nmodule.exports = CheckBox;\n\n// name of skin that will be applied\nCheckBox.SKIN_NAME = 'checkbox';\n\n// the states of the checkbox as constants\nCheckBox.UP = 'up';\nCheckBox.DOWN = 'down';\nCheckBox.HOVER = 'hover';\n\n// the states of the checkbox in the 'selected' state as constants\nCheckBox.SELECTED_UP = 'selected_up';\nCheckBox.SELECTED_DOWN = 'selected_down';\nCheckBox.SELECTED_HOVER = 'selected_hover';\n\n// the list of non-selected states\nCheckBox.stateNames = [\n CheckBox.UP,\n CheckBox.DOWN,\n CheckBox.HOVER\n];\n\n// the list of selected states\nCheckBox.selectedStateNames = [\n CheckBox.SELECTED_UP,\n CheckBox.SELECTED_DOWN,\n CheckBox.SELECTED_HOVER\n];\n\nCheckBox.prototype.mousedown = function() {\n this.handleEvent(CheckBox.DOWN);\n};\n\nCheckBox.prototype.mouseup = function() {\n this.handleEvent(CheckBox.UP);\n};\n\nCheckBox.prototype.mousemove = function() {\n};\n\nCheckBox.prototype.mouseover = function() {\n this.handleEvent(CheckBox.HOVER);\n};\n\nCheckBox.prototype.mouseout = function() {\n this.handleEvent('out');\n};\n\n/**\n * initiate all skins first\n * (to prevent flickering)\n *\n * @method preloadSkins\n */\nCheckBox.prototype.preloadSkins = function() {\n for (var i = 0; i < this._validStates.length; i++) {\n var name = this._validStates[i];\n var skin = this.theme.getSkin(this.skinName, name);\n this.skinCache[name] = skin;\n if (skin) {\n this.addChildAt(skin, 0);\n skin.alpha = 0.0;\n if (this.width) {\n skin.width = this.width;\n }\n if (this.height) {\n skin.height = this.height;\n }\n }\n }\n};\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(CheckBox.prototype, 'currentState',{\n get: function() {\n return this._currentState;\n },\n set: function(value) {\n if (this._currentState === value) {\n return;\n }\n if (this._validStates.indexOf(value) < 0) {\n throw new Error('Invalid state: ' + value + '.');\n }\n this._currentState = value;\n this.invalidState = true;\n }\n});\n\n/**\n * Indicate if the checkbox is selected (checked)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(CheckBox.prototype, 'selected', {\n set: function(selected) {\n var state = this._currentState;\n var index;\n if ((CheckBox.selectedStateNames.indexOf(state) >= 0) && !selected) {\n index = CheckBox.selectedStateNames.indexOf(state);\n state = CheckBox.stateNames[index];\n } else if ((CheckBox.stateNames.indexOf(state) >= 0) && selected) {\n index = CheckBox.stateNames.indexOf(state);\n state = CheckBox.selectedStateNames[index];\n }\n\n this._selected = selected;\n this._pressed = false; //to prevent toggling on touch/mouse up\n this.currentState = state;\n },\n get: function() {\n return this._selected;\n }\n});\n\nCheckBox.prototype.toggleSelected = function () {\n this.selected = !this.selected;\n if (this.change) {\n this.change(this.selected);\n }\n};\n\nCheckBox.prototype.handleEvent = function (type) {\n switch (type) {\n case CheckBox.UP:\n if (this._mousedown) {\n this._mousedown = false;\n this.toggleSelected();\n this.currentState = this.selected ? CheckBox.SELECTED_UP : CheckBox.UP;\n }\n break;\n case CheckBox.DOWN:\n if (!this._mousedown) {\n this._mousedown = true;\n this.currentState = this.selected ? CheckBox.SELECTED_DOWN : CheckBox.DOWN;\n }\n break;\n case CheckBox.HOVER:\n if (!this._mousedown) {\n this.currentState = this.selected ? CheckBox.SELECTED_HOVER : CheckBox.HOVER;\n }\n break;\n case 'out':\n this.currentState = this.selected ? CheckBox.SELECTED_UP : CheckBox.UP;\n break;\n default:\n break;\n }\n};\n","var Skinable = require('../Skinable'),\n InputWrapper = require('../../utils/InputWrapper');\n\n/**\n * InputControl used for TextInput, TextArea and everything else that\n * is capable of entering text\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputControl\n * @extends GOWN.Skinable\n * @memberof GOWN\n * @constructor\n */\nfunction InputControl(text, theme) {\n Skinable.call(this, theme);\n this.text = text || '';\n // create DOM Input (if we need one)\n InputWrapper.createInput();\n this.hasFocus = false;\n\n /**\n * indicates if the mouse button has been pressed\n * @property _mouseDown\n * @type {boolean}\n * @private\n */\n this._mouseDown = false;\n\n /**\n * TODO: description!\n *\n * @type {Array}\n * @private\n */\n this._clipPos = [0, 0];\n}\n\nInputControl.prototype = Object.create( Skinable.prototype );\nInputControl.prototype.constructor = InputControl;\nmodule.exports = InputControl;\n\n/**\n * currently selected input control (used for tab index)\n *\n * @property currentInput\n * @type GOWN.InputControl\n * @static\n */\nInputControl.currentInput = null;\n\nInputControl.prototype.onKeyUp = function() {\n};\n\nInputControl.prototype.onKeyDown = function() {\n};\n\n/**\n * determine where the click was made along the string\n *\n * @method clickPos\n * @param x\n * @returns {Number}\n */\nInputControl.prototype.clickPos = function(x)\n{\n\n var text = this.pixiText.text,\n totalWidth = this.pixiText.x,\n pos = text.length;\n\n if (x < this.textWidth(text) + totalWidth)\n {\n // loop through each character to identify the position\n for (var i=0; i<text.length; i++)\n {\n totalWidth += this.textWidth(text[i]);\n if (totalWidth >= x)\n {\n pos = i;\n break;\n }\n }\n }\n\n return this._clipPos[0] + pos;\n};\n\nInputControl.prototype.posToCoord = function(pos) {\n var text = this.pixiText.text,\n totalWidth = this.pixiText.x;\n\n if (pos < text.length) {\n return totalWidth + this.textWidth(text.substring(0, pos));\n } else {\n return totalWidth + this.textWidth(text);\n }\n};\n\n/**\n * get text width\n *\n * @method textWidth\n * @param text\n * @returns {*}\n */\nInputControl.prototype.textWidth = function(text) {\n if(!this.text._isBitmapFont)\n {\n var ctx = this.pixiText.context;\n return ctx.measureText(text || '').width;\n }\n else\n {\n var prevCharCode = null;\n var width = 0;\n var data = this.pixiText._data;\n for(var i = 0; i < text.length; i++) {\n var charCode = text.charCodeAt(i);\n var charData = data.chars[charCode];\n if(!charData) {\n continue;\n }\n if(prevCharCode && charData.kerning[prevCharCode]) {\n width += charData.kerning[prevCharCode];\n }\n width += charData.xAdvance;\n prevCharCode = charCode;\n }\n return width * this.pixiText._scale;\n }\n};\n\n/**\n * focus on this input and set it as current\n *\n * @method focus\n */\nInputControl.prototype.focus = function () {\n // is already current input\n if (GOWN.InputControl.currentInput === this) {\n return;\n }\n\n // drop focus\n if (GOWN.InputControl.currentInput) {\n GOWN.InputControl.currentInput.blur();\n }\n\n // set focus\n GOWN.InputControl.currentInput = this;\n this.hasFocus = true;\n\n // check custom focus event\n this.onfocus();\n\n /*\n //TODO\n // is read only\n if(this.readonly) {\n return;\n }\n */\n\n // focus hidden input\n InputWrapper.focus();\n};\n\n/**\n * determine if the input has the focus\n *\n * @property hasFocus\n * @type Boolean\n */\nObject.defineProperty(InputControl.prototype, 'hasFocus', {\n get: function() {\n return this._hasFocus;\n },\n set: function(focus) {\n this._hasFocus = focus;\n }\n});\n\nInputControl.prototype.onMouseUpOutside = function() {\n if(this.hasFocus && !this._mouseDown)\n {\n this.blur();\n }\n this._mouseDown = false;\n};\n\n/**\n * callback to execute code on focus\n * @method onFocus\n */\nInputControl.prototype.onfocus = function () {\n};\n\n/**\n * blur the text input (remove focus)\n *\n * @method blur\n */\nInputControl.prototype.blur = function() {\n if (GOWN.InputControl.currentInput === this) {\n GOWN.InputControl.currentInput = null;\n this.hasFocus = false;\n\n // blur hidden input\n InputWrapper.blur();\n this.onblur();\n }\n};\n\n/**\n * callback that will be executed once the text input is blurred\n *\n * @method onblur\n */\nInputControl.prototype.onblur = function() {\n};\n\n// blur current input\nInputControl.blur = function() {\n if (GOWN.InputControl.currentInput &&\n !GOWN.InputControl.currentInput._mouseDown) {\n GOWN.InputControl.currentInput.blur();\n GOWN.InputControl.currentInput = null;\n }\n};\nwindow.addEventListener('blur', InputControl.blur, false);\n","var Control = require('../Control'),\n ViewPortBounds = require('../layout/ViewPortBounds');\n\n/**\n * The LayoutGroup allows you to add PIXI.js children that will be positioned\n *\n * @class LayoutGroup\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutGroup() {\n this.percentWidth = this.percentWidth || null;\n this.percentHeight = this.percentHeight || null;\n Control.call(this);\n this._viewPortBounds = new ViewPortBounds();\n this._needUpdate = true;\n}\n\nLayoutGroup.prototype = Object.create( Control.prototype );\nLayoutGroup.prototype.constructor = LayoutGroup;\nmodule.exports = LayoutGroup;\n\n/**\n * update before draw call (position label)\n *\n * @method redraw\n */\nLayoutGroup.prototype.redraw = function() {\n var dimensionChanged = false;\n if (this._width && this._viewPortBounds.explicitWidth !== this._width) {\n // width set - change viewport boundaries\n this._viewPortBounds.explicitWidth = this._width;\n dimensionChanged = true;\n }\n if (this._height && this._viewPortBounds.explicitHeight !== this._height) {\n // height set - change viewport boundaries\n this._viewPortBounds.explicitHeight = this._height;\n dimensionChanged = true;\n }\n if (this.layout &&\n (this._needUpdate || dimensionChanged || this.layout.needUpdate)) {\n this.layout.layout(this.children, this._viewPortBounds);\n this._needUpdate = false;\n this.layout._needUpdate = false;\n }\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChild = function(child) {\n var re = Control.prototype.addChild.call(this, child);\n this._needUpdate = true;\n return re;\n};\n\n/* istanbul ignore next */\nLayoutGroup.prototype.addChildAt = function(child, pos) {\n var re = Control.prototype.addChildAt.call(this, child, pos);\n this._needUpdate = true;\n return re;\n};\n\n/**\n * add some space between children\n *\n * @param space {Number}\n */\nLayoutGroup.prototype.addSpacer = function(space) {\n var spacer = new Control();\n spacer.width = spacer.height = space;\n this.addChild(spacer);\n};\n\n/**\n * Indicates if the given child is inside the viewport (only used for scrolling)\n *\n * @method childIsRenderAble\n * @type boolean\n * @param child one child with set coordinates and dimensions\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.childIsRenderAble = function(child, x, y, width, height) {\n return child.x < width + x &&\n child.y < height + y &&\n child.x > x - child.width &&\n child.y > y - child.height;\n};\n\n\n/**\n * Update renderable (culling of non visible objects)\n *\n * @method updateRenderable\n * @param x X-position on the scroll-container\n * @param y Y-position on the scroll-container\n * @param width width of the viewport\n * @param height height of the viewport\n */\nLayoutGroup.prototype.updateRenderable = function(x, y, width, height) {\n for(var i=0, j=this.children.length; i<j; i++) {\n var child = this.children[i];\n child.renderable = this.childIsRenderAble(child, x, y, width, height);\n }\n};\n\n\n/**\n * The width of the group, will get the position and the width of the right child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'width', {\n set: function(width) {\n this._width = width;\n },\n get: function() {\n if (this._width > 0) {\n return this._width;\n }\n var width = 0;\n if (this.children) {\n for (var i = 0; i < this.children.length; i++) {\n var child = this.getChildAt(i);\n width = Math.max(width, child.x+child.width);\n }\n }\n return width;\n }\n});\n\n/**\n * The height of the group, will get the position and the height of the bottom child.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(LayoutGroup.prototype, 'height', {\n set: function(height) {\n this._height = height;\n },\n get: function() {\n if (this._height > 0) {\n return this._height;\n }\n var height = 0;\n if (this.children) {\n for (var i = 0; i < this.children.length; i++) {\n var child = this.getChildAt(i);\n height = Math.max(height, child.y+child.height);\n }\n }\n return height;\n }\n});\n","var Control = require('../Control'),\n LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * The ScrollArea hosts some content that can be scrolled. The width/height\n * of the ScrollArea defines the viewport.\n *\n * @class ScrollArea\n * @extends GOWN.Control\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollArea(content, addListener, scrolldelta, bar) {\n this.addListener = addListener || true;\n this.bar = bar || null;\n Control.call(this);\n this.content = content || null;\n this.mask = undefined;\n this.enabled = true;\n this._useMask = true;\n\n this.scrolldirection = ScrollArea.SCROLL_AUTO;\n // # of pixel you scroll at a time (if the event delta is 1 / -1)\n this.scrolldelta = scrolldelta || 10;\n\n this.interactive = true;\n\n this.touchend = this.touchendoutside = this.mouseupoutside = this.mouseup;\n this.touchstart = this.mousedown;\n this.touchmove = this.mousemove;\n}\n\nScrollArea.prototype = Object.create( Control.prototype );\nScrollArea.prototype.constructor = ScrollArea;\nmodule.exports = ScrollArea;\n\n// scrolls horizontal as default, but will change if a\n// horizontal layout is set in the content\nScrollArea.SCROLL_AUTO = 'auto';\nScrollArea.SCROLL_VERTICAL = 'vertical';\nScrollArea.SCROLL_HORIZONTAL = 'horizontal';\n\n/**\n * check, if the layout of the content is horizontally alligned\n *\n * * @method layoutHorizontalAlign\n */\nScrollArea.prototype.layoutHorizontalAlign = function() {\n return this.content.layout &&\n this.content.layout.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT;\n};\n\n/**\n * test if content width bigger than this width but content height is\n * smaller than this height (so we allow scrolling in only one direction)\n *\n * @method upright\n */\nScrollArea.prototype.upright = function() {\n return this.content.height <= this.height &&\n this.content.width > this.width;\n};\n\n/**\n * get 1-dimensional scroll direction\n * dissolve \"auto\" into VERTICAL or HORIZONTAL\n *\n * @method direction\n * @returns {String}\n */\nScrollArea.prototype.direction = function() {\n var scrollAuto = this.scrolldirection === ScrollArea.SCROLL_AUTO;\n var scroll = ScrollArea.SCROLL_VERTICAL;\n // if the scroll direction is set to SCROLL_AUTO we check, if the\n // layout of the content is set to horizontal or the content\n // width is bigger than the current\n if (this.scrolldirection === ScrollArea.SCROLL_HORIZONTAL ||\n (scrollAuto && (this.layoutHorizontalAlign() || this.upright()) )) {\n scroll = ScrollArea.SCROLL_HORIZONTAL;\n }\n return scroll;\n};\n\n/**\n * move content\n *\n * @method _scrollContent\n */\nScrollArea.prototype._scrollContent = function(x, y) {\n // todo: press shift to switch direction\n var scroll = this.direction();\n var contentMoved = false;\n if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n if (this.content.width > this.width) {\n // assure we are within bounds\n x = Math.min(x, 0);\n if (this.content.width) {\n x = Math.max(x, -(this.content.width - this.width));\n }\n this.content.x = Math.floor(x);\n contentMoved = true;\n }\n }\n if (scroll === ScrollArea.SCROLL_VERTICAL) {\n if (this.content.height > this.height) {\n // assure we are within bounds\n y = Math.min(y, 0);\n if (this.content.height && this.content.y < 0) {\n y = Math.max(y, -(this.content.height - this.height));\n }\n this.content.y = Math.floor(y);\n contentMoved = true;\n }\n }\n return contentMoved;\n};\n\n// update ScrollBar progress/thumb position\nScrollArea.prototype.updateBar = function() {\n if (this.bar && this.bar.thumb && this.content) {\n var scroll = this.direction();\n if (scroll === ScrollArea.SCROLL_HORIZONTAL) {\n this.bar.thumb.x = Math.floor(-this.content.x /\n (this.content.width - this.width) *\n (this.bar.width - this.bar.thumb.width));\n }\n if (scroll === ScrollArea.SCROLL_VERTICAL) {\n this.bar.thumb.y = Math.floor(-this.content.y /\n (this.content.height - this.height) *\n (this.bar.height - this.bar.thumb.height));\n }\n }\n};\n\n/**\n * mouse button pressed / touch start\n *\n * @method mousedown\n */\nScrollArea.prototype.mousedown = function(mouseData) {\n var pos = mouseData.data.getLocalPosition(this);\n if (!this._start) {\n this._start = [\n pos.x - this.content.x,\n pos.y - this.content.y\n ];\n }\n};\n\n/**\n * mouse/finger moved\n *\n * @method mousemove\n */\nScrollArea.prototype.mousemove = function(mouseData) {\n if (this._start) {\n var pos = mouseData.data.getLocalPosition(this);\n if (this._scrollContent(\n pos.x - this._start[0],\n pos.y - this._start[1])) {\n this.updateBar();\n }\n }\n};\n\n/**\n * mouse up/touch end\n *\n * @method mouseup\n */\nScrollArea.prototype.mouseup = function() {\n this._start = null;\n};\n\n\n/**\n * do not remove children - we just have a content\n * override addChild to prevent the developer from adding more than one context\n * @param child\n */\n/*\nScrollArea.prototype.removeChild = function(child) {\n throw new Error('use .content = null instead of removeChild(child)')\n};\n\nScrollArea.prototype.addChild = function(child) {\n throw new Error('use .content = child instead of addChild(child)')\n};\n*/\n\n/**\n * create a new mask or redraw it\n * @method updateMask\n */\nScrollArea.prototype.updateMask = function() {\n if (this.height && this.width && this._useMask) {\n if (this.mask === undefined) {\n this.mask = new PIXI.Graphics();\n }\n this.drawMask();\n } else {\n if (this.mask) {\n this.mask.clear();\n }\n this.mask = undefined;\n }\n};\n\n/**\n * draw mask (can be overwritten, e.g. to show something above the\n * scroll area when using a vertical layout)\n * @private\n * @method drawMask\n */\nScrollArea.prototype.drawMask = function() {\n var pos = new PIXI.Point(0, 0);\n var global = this.toGlobal(pos);\n this.mask.clear()\n .beginFill('#fff', 1)\n .drawRect(global.x, global.y, this.width, this.height)\n .endFill();\n if (this.hitArea) {\n this.hitArea.width = this.width;\n this.hitArea.height = this.height;\n } else {\n this.hitArea = new PIXI.Rectangle(0, 0, this.width, this.height);\n }\n};\n\n\n/**\n * update mask as needed\n *\n * @method redraw\n */\nScrollArea.prototype.redraw = function() {\n if (this.content.updateRenderable) {\n this.content.updateRenderable(-this.content.x, -this.content.y, this.width, this.height);\n }\n\n if (this.invalid) {\n this.updateMask();\n this.invalid = false;\n }\n};\n\n/**\n * scroll content, that can have the scrollarea as viewport.\n * can be a PIXI.Texture or a ScrollContainer\n *\n * @property content\n */\nObject.defineProperty(ScrollArea.prototype, 'content', {\n set: function(content) {\n if (this._content) {\n this.removeChild(content);\n }\n this._content = content;\n if (content) {\n this.addChild(content);\n }\n },\n get: function() {\n return this._content;\n }\n});\n\n\n/**\n * The width of the ScrollArea (defines the viewport)\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'width', {\n get: function() {\n if (!this._width) {\n return this._content.width;\n }\n return this._width;\n },\n set: function(width) {\n this._width = width;\n this.invalid = true;\n }\n});\n\n/**\n * The height of the ScrollArea (defines the viewport)\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScrollArea.prototype, 'height', {\n get: function() {\n if (!this._height) {\n return this._content.height;\n }\n return this._height;\n },\n set: function(height) {\n this._height = height;\n this.invalid = true;\n }\n});\n","var Scrollable = require('./Scrollable'),\n LayoutAlignment = require('../layout/LayoutAlignment');\n\n/**\n * scoll bar with thumb\n * hosting some Viewport (e.g. a ScrollArea or a Texture)\n *\n * @class ScrollArea\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollBar(scrollArea, thumb, theme, skinName) {\n this.scrollArea = scrollArea;\n this.skinName = skinName || ScrollBar.SKIN_NAME;\n\n if (this.orientation === undefined) {\n this.orientation = Scrollable.HORIZONTAL;\n if (scrollArea && scrollArea.content &&\n scrollArea.content.layout.alignment ===\n LayoutAlignment.VERTICAL_ALIGNMENT) {\n this.orientation = Scrollable.VERTICAL;\n }\n }\n if (scrollArea) {\n //scrollArea\n // move thumb when scrollarea moves\n scrollArea.bar = this;\n }\n Scrollable.call(this, thumb, theme);\n}\n\nScrollBar.prototype = Object.create( Scrollable.prototype );\nScrollBar.prototype.constructor = ScrollBar;\nmodule.exports = ScrollBar;\n\n\nScrollBar.SKIN_NAME = 'scroll_bar';\n\nScrollBar.prototype.scrollableredraw = Scrollable.prototype.redraw;\n/**\n * recalculate scroll thumb width/height\n * @method redraw\n */\nScrollBar.prototype.redraw = function() {\n if (this.invalidTrack) {\n if (this.scrollArea && this.thumb) {\n if (this.orientation === Scrollable.HORIZONTAL) {\n this.thumb.width = Math.max(20, this.scrollArea.width /\n (this.scrollArea.content.width / this.scrollArea.width));\n } else {\n this.thumb.height = Math.max(20, this.scrollArea.height /\n (this.scrollArea.content.height / this.scrollArea.height));\n }\n }\n this.scrollableredraw(this);\n }\n};\n\n/**\n * thumb has been moved - scroll content to position\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n * @method thumbMoved\n */\nScrollBar.prototype.thumbMoved = function(x, y) {\n if (this.scrollArea && this.scrollArea.content) {\n\n if (this.orientation === Scrollable.HORIZONTAL) {\n this.scrollArea._scrollContent(\n -(this.scrollArea.content.width - this.scrollArea.width) *\n (x / (this.scrollArea.width - this.thumb.width)),\n 0);\n } else {\n this.scrollArea._scrollContent(\n 0,\n -(this.scrollArea.content.height - this.scrollArea.height) *\n (y / (this.scrollArea.height - this.thumb.height)));\n }\n }\n};\n","var Button = require('./Button');\n\n/**\n * thumb button that can be moved on the scrollbar\n *\n * @class ScrollThumb\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ScrollThumb(scrollable, theme, skinName) {\n this.scrollable = scrollable;\n var defaultSkin = ScrollThumb.SKIN_NAME;\n if (!theme.thumbSkin) {\n defaultSkin = Button.SKIN_NAME;\n }\n this.skinName = skinName || defaultSkin;\n if (theme.thumbSkin) {\n this._validStates = ScrollThumb.THUMB_STATES;\n }\n this.width = theme.thumbSize || 20;\n this.height = theme.thumbSize || 20;\n Button.call(this, theme, this.skinName);\n this.invalidTrack = true;\n\n this.touchmove = this.mousemove;\n /* jshint unused: false */\n this.touchdown = this.mousedown;\n /* jshint unused: false */\n this.touchend = this.touchendoutside = this.mouseup;\n}\n\nScrollThumb.prototype = Object.create( Button.prototype );\nScrollThumb.prototype.constructor = ScrollThumb;\nmodule.exports = ScrollThumb;\n\n\nScrollThumb.SKIN_NAME = 'scroll_thumb';\n\nScrollThumb.THUMB_STATES = [\n 'horizontal_up', 'vertical_up',\n 'horizontal_down', 'vertical_down',\n 'horizontal_hover', 'vertical_hover'\n];\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ScrollThumb.prototype, 'currentState',{\n set: function(value) {\n if (this.theme.thumbSkin) {\n // use skin including orientation instead of default skin\n value = this.scrollable.orientation + '_' + value;\n }\n originalCurrentState.set.call(this, value);\n }\n});\n\nScrollThumb.prototype.buttonmousedown = Button.prototype.mousedown;\nScrollThumb.prototype.mousedown = function(mouseData) {\n this.buttonmousedown(mouseData);\n var local = mouseData.data.getLocalPosition(this.scrollable);\n this.scrollable._start = [local.x, local.y];\n //this.scrollable.handleDown(mouseData);\n mouseData.stopPropagation();\n};\n\nScrollThumb.prototype.buttonmousemove = Button.prototype.mousemove;\nScrollThumb.prototype.mousemove = function (mouseData) {\n this.buttonmousemove(mouseData);\n this.scrollable.handleMove(mouseData);\n};\n\nScrollThumb.prototype.buttonmouseup = Button.prototype.mouseup;\nScrollThumb.prototype.mouseup = function (mouseData) {\n this.buttonmouseup(mouseData);\n this.scrollable.handleUp();\n};\n\n/**\n * show track icon on thumb\n *\n * @method showTrack\n * @param skin\n */\nScrollThumb.prototype.showTrack = function(skin) {\n if (this.skin !== skin) {\n if(this.skin) {\n this.removeChild(this.skin);\n }\n\n this.addChild(skin);\n this.skin = skin;\n }\n skin.x = Math.floor((this.width - skin.getBounds().width )/ 2);\n skin.y = Math.floor((this.height - skin.getBounds().height )/ 2);\n this.invalidTrack = false;\n};\n\n/**\n * redraw the skin\n *\n * @method redraw\n */\nScrollThumb.prototype.redraw = function() {\n this.redrawSkinable();\n if (this.invalidTrack && this.theme.thumbSkin) {\n this.fromSkin(this.scrollable.orientation+'_thumb', this.showTrack);\n }\n};\n\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method move\n */\nScrollThumb.prototype.move = function(x, y) {\n if (this.scrollable.orientation === GOWN.Scrollable.HORIZONTAL) {\n if (isNaN(x)) {\n return false;\n }\n x = Math.min(x, this.scrollable.maxWidth());\n x = Math.max(x, 0);\n if (x !== this.x) {\n this.x = x;\n return true;\n }\n } else {\n if (isNaN(y)) {\n return false;\n }\n y = Math.min(y, this.scrollable.maxHeight());\n y = Math.max(y, 0);\n if (y !== this.y) {\n this.y = y;\n return true;\n }\n }\n return false;\n};\n","var Skinable = require('../Skinable'),\n ScrollThumb = require('./ScrollThumb');\n/**\n * scroll bar or slider\n * @class Scrollable\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Scrollable(thumb, theme) {\n this.mode = this.mode || Scrollable.DESKTOP_MODE;\n\n Skinable.call(this, theme);\n\n this.orientation = this.orientation || Scrollable.HORIZONTAL;\n\n this.thumb = thumb || new ScrollThumb(this, this.theme);\n this.addChild(this.thumb);\n\n this.invalidTrack = true;\n this._inverse = false;\n this._start = null;\n\n // # of pixel you scroll at a time (if the event delta is 1 / -1)\n this.scrolldelta = 10;\n\n this.touchstart = this.mousedown = this.handleDown;\n this.touchend = this.mouseup = this.mouseupoutside = this.handleUp;\n}\n\nScrollable.prototype = Object.create( Skinable.prototype );\nScrollable.prototype.constructor = Scrollable;\nmodule.exports = Scrollable;\n\n\n/**\n * in desktop mode mouse wheel support is added (default)\n *\n * @property DESKTOP_MODE\n * @static\n */\nScrollable.DESKTOP_MODE = 'desktop';\n\n/**\n * in mobile mode mouse wheel support is disabled\n *\n * @property MOBILE_MODE\n * @static\n */\nScrollable.MOBILE_MODE = 'mobile';\n\n/**\n * show horizontal scrollbar/slider\n *\n * @property HORIZONTAL\n * @static\n */\nScrollable.HORIZONTAL = 'horizontal';\n\n/**\n * show vertical scrollbar/slider\n *\n * @property VERTICAL\n * @static\n */\nScrollable.VERTICAL = 'vertical';\n\n/**\n * handle mouse down/touch start\n * move scroll thumb clicking somewhere on the scroll bar (outside the thumb)\n *\n * @method handleDown\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleDown = function(mouseData) {\n var local = mouseData.data.getLocalPosition(this);\n var center = {\n x: local.x - this.thumb.width / 2,\n y: local.y - this.thumb.height / 2\n };\n if (mouseData.target === this &&\n this.moveThumb(center.x, center.y)) {\n this._start = [local.x, local.y];\n // do not override localX/localY in start\n // if we do not move the thumb\n this.thumbMoved(local.x, local.y);\n }\n};\n\n/**\n * handle mouse up/touch end\n *\n * @method handleUp\n */\nScrollable.prototype.handleUp = function() {\n this._start = null;\n};\n\n/**\n * handle mouse move: move thumb\n *\n * @method handleMove\n * @param mouseData mousedata provided by pixi\n */\nScrollable.prototype.handleMove = function(mouseData) {\n if (this._start) {\n var local = mouseData.data.getLocalPosition(this);\n var x = this.thumb.x + local.x - this._start[0];\n var y = this.thumb.y + local.y - this._start[1];\n if (this.moveThumb(x, y)) {\n // do not override localX/localY in start\n // if we do not move the thumb\n this.thumbMoved(x, y);\n this._start[0] = local.x;\n this._start[1] = local.y;\n }\n }\n};\n\n/**\n * handle mouse wheel: move thumb on track\n *\n * @method handleWheel\n * @param event mousewheel event from browser\n */\nScrollable.prototype.handleWheel = function (event) {\n var x = this.thumb.x - event.delta * this.scrolldelta;\n var y = this.thumb.y - event.delta * this.scrolldelta;\n if (this.moveThumb(x, y)) {\n this.thumbMoved(x, y);\n }\n};\n\n/**\n * thumb has new x/y position\n *\n * @method thumbMoved\n * @param x x-position that has been scrolled to (ignored when vertical)\n * @param y y-position that has been scrolled to (ignored when horizontal)\n */\n/* jshint unused: false */\nScrollable.prototype.thumbMoved = function(x, y) {\n};\n\n/**\n * show the progress skin from the start/end of the scroll track to the current\n * position of the thumb.\n *\n * @method _updateProgressSkin\n * @private\n */\nScrollable.prototype._updateProgressSkin = function() {\n if (!this.progressSkin) {\n return;\n }\n if(this.orientation === Scrollable.HORIZONTAL) {\n var progressPosX = this.thumb.x + this.thumb.width / 2;\n if (this.inverse) {\n this.progressSkin.x = progressPosX;\n this.progressSkin.width = this.width - progressPosX;\n this.progressSkin.height = this.skin.height;\n } else {\n this.progressSkin.x = 0;\n this.progressSkin.width = progressPosX;\n this.progressSkin.height = this.skin.height;\n }\n } else {\n var progressPosY = this.thumb.y + this.thumb.height / 2;\n if (this.inverse) {\n this.progressSkin.y = progressPosY;\n this.progressSkin.height = this.height - progressPosY;\n this.progressSkin.width = this.skin.width;\n } else {\n this.progressSkin.y = 0;\n this.progressSkin.height =progressPosY;\n this.progressSkin.width = this.skin.width;\n }\n }\n};\n\n/**\n * returns the max. width in pixel\n * (normally this.width - thumb width)\n *\n * @method maxWidth\n * @returns {Number}\n */\nScrollable.prototype.maxWidth = function() {\n return this.width - this.thumb.width;\n};\n\n/**\n * returns the max. height in pixel\n * (normally this.height - thumb height)\n *\n * @method maxHeight\n * @returns {Number}\n */\nScrollable.prototype.maxHeight = function() {\n return this.height - this.thumb.height;\n};\n\n/**\n * move the thumb on the scroll bar within its bounds\n *\n * @param x new calculated x position of the thumb\n * @param y new calculated y position of the thumb\n * @returns {boolean} returns true if the position of the thumb has been\n * moved\n * @method moveThumb\n */\nScrollable.prototype.moveThumb = function(x, y) {\n if (this.thumb.move(x, y)) {\n this._updateProgressSkin();\n return true;\n }\n return false;\n};\n\n/**\n * show scroll track\n *\n * @method showTrack\n * @param skin\n */\nScrollable.prototype.showTrack = function(skin) {\n if (this.skin !== skin) {\n if(this.skin) {\n this.removeChild(this.skin);\n }\n\n this.addChildAt(skin, 0);\n this.skin = skin;\n if (this.progressSkin) {\n this._updateProgressSkin();\n }\n }\n};\n\n/**\n * show progress on track (from the start/end of the track to the\n * current position of the thumb)\n *\n * @method showProgress\n * @param skin\n */\nScrollable.prototype.showProgress = function(skin) {\n if (this.progressSkin !== skin) {\n if(this.progressSkin) {\n this.removeChild(this.progressSkin);\n }\n skin.width = skin.height = 0;\n this.addChildAt(skin, 0);\n this.progressSkin = skin;\n if (this.skin) {\n this._updateProgressSkin();\n }\n }\n};\n\n/**\n * redraw track and progressbar\n *\n * @method redraw\n */\nScrollable.prototype.redraw = function() {\n if (this.invalidTrack && this.thumb) {\n this.fromSkin(this.orientation+'_progress', this.showProgress);\n this.fromSkin(this.orientation+'_track', this.showTrack);\n if (this.skin) {\n if (this.orientation === Scrollable.HORIZONTAL) {\n this.skin.width = this.width;\n } else {\n this.skin.height = this.height;\n }\n this.invalidTrack = false;\n }\n }\n};\n\n\n/**\n * The width of the Scrollable, setting this will redraw the track and thumb.\n\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'width', {\n get: function() {\n return this._width;\n },\n set: function(width) {\n this._width = width;\n this.invalidTrack = true;\n if (this.thumb) {\n this.thumb.invalidTrack = true;\n }\n }\n});\n\n/**\n * Inverse the progress bar\n *\n * @property inverse\n * @type Boolean\n */\nObject.defineProperty(Scrollable.prototype, 'inverse', {\n get: function() {\n return this._inverse;\n },\n set: function(inverse) {\n if (inverse !== this._inverse) {\n this._inverse = inverse;\n\n if (this.orientation === Scrollable.HORIZONTAL) {\n this.moveThumb(0, this.width - this.thumb.x);\n } else {\n this.moveThumb(0, this.height - this.thumb.y);\n }\n\n this.invalidTrack = true;\n if (this.thumb) {\n this.thumb.invalidTrack = true;\n }\n }\n }\n});\n\n/**\n * The height of the Scrollable, setting this will redraw the track and thumb.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Scrollable.prototype, 'height', {\n get: function() {\n return this._height;\n },\n set: function(height) {\n this._height = height;\n this.invalidTrack = true;\n if (this.thumb) {\n this.thumb.invalidTrack = true;\n }\n }\n});\n","var Scrollable = require('./Scrollable'),\n SliderData = require('../../utils/SliderData');\n\n/**\n * Simple slider with min. and max. value\n *\n * @class Slider\n * @extends GOWN.Scrollable\n * @memberof GOWN\n * @constructor\n */\n\nfunction Slider(thumb, theme, skinName) {\n this.skinName = skinName || Slider.SKIN_NAME;\n\n this._minimum = this._minimum || 0;\n this._maximum = this._maximum || 100;\n this.step = this.step || 0; //TODO: implement me!\n this.page = this.page || 10; //TODO: implement me!\n this._value = this.minimum;\n this.change = null;\n\n Scrollable.call(this, thumb, theme);\n}\n\nSlider.prototype = Object.create( Scrollable.prototype );\nSlider.prototype.constructor = Slider;\nmodule.exports = Slider;\n\n\nSlider.SKIN_NAME = 'scroll_bar';\n\n/**\n * thumb has been moved - calculate new value\n *\n * @param x x-position to scroll to (ignored when vertical)\n * @param y y-position to scroll to (ignored when horizontal)\n */\nSlider.prototype.thumbMoved = function(x, y) {\n var pos = 0;\n if (this.orientation === Scrollable.HORIZONTAL) {\n pos = x;\n } else {\n pos = y;\n }\n this.value = this.pixelToValue(pos);\n};\n\n/**\n * calculate value of slider based on current pixel position of thumb\n *\n * @param position\n * @method pixelToValue\n * @returns Number value between minimum and maximum\n */\nSlider.prototype.pixelToValue = function(position) {\n var max = 0;\n if (this.orientation === Scrollable.HORIZONTAL) {\n max = this.maxWidth();\n } else {\n max = this.maxHeight();\n }\n if (this._inverse) {\n position = max - position;\n }\n return position / max * (this.maximum - this.minimum) + this.minimum;\n};\n\n/**\n * calculate current pixel position of thumb based on given value\n *\n * @param value\n * @method valueToPixel\n * @returns Number position of the scroll thumb in pixel\n */\nSlider.prototype.valueToPixel = function(value) {\n var max = 0;\n if (this.orientation === Scrollable.HORIZONTAL) {\n max = this.maxWidth();\n } else {\n max = this.maxHeight();\n }\n var position = (value - this.minimum) / (this.maximum - this.minimum) * max;\n if (this._inverse) {\n position = max - position;\n }\n return position;\n};\n\n/**\n * set value (between minimum and maximum)\n *\n * @property value\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'value', {\n get: function() {\n return this._value;\n },\n set: function(value) {\n if (isNaN(value)) {\n return;\n }\n value = Math.min(value, this.maximum);\n value = Math.max(value, this.minimum);\n if (this._value === value) {\n return;\n }\n\n // move thumb\n var pos = this.valueToPixel(value);\n if (this.orientation === Scrollable.HORIZONTAL) {\n this.moveThumb(pos, 0);\n } else {\n this.moveThumb(0, pos);\n }\n\n this._value = value;\n if (this.change) {\n var sliderData = new SliderData();\n sliderData.value = this._value;\n sliderData.target = this;\n this.change(sliderData);\n }\n }\n});\n\n/**\n * set minimum and update value if necessary\n *\n * @property minimum\n * @type Number\n * @default 0\n */\nObject.defineProperty(Slider.prototype, 'minimum', {\n get: function() {\n return this._minimum;\n },\n set: function(minimum) {\n if(!isNaN(minimum) && this.minimum !== minimum && minimum < this.maximum) {\n this._minimum = minimum;\n }\n if (this._value < this.minimum) {\n this.value = this._value;\n }\n }\n});\n\n/**\n * set maximum and update value if necessary\n *\n * @property maximum\n * @type Number\n * @default 100\n */\nObject.defineProperty(Slider.prototype, 'maximum', {\n get: function() {\n return this._maximum;\n },\n set: function(maximum) {\n if(!isNaN(maximum) && this.maximum !== maximum && maximum > this.minimum) {\n this._maximum = maximum;\n }\n if (this._value > this.maximum) {\n this.value = maximum;\n }\n }\n});\n","var Control = require('../Control'),\n InputControl = require('./InputControl'),\n InputWrapper = require('../../utils/InputWrapper');\n/**\n * The basic Text Input - based on PIXI.Input Input by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class TextInput\n * @extends GOWN.InputControl\n * @memberof GOWN\n * @param text editable text shown in input\n * @param displayAsPassword Display TextInput as Password (default false)\n * @param theme default theme\n * @constructor\n */\n\nfunction TextInput(text, displayAsPassword, theme, skinName) {\n // show and load background image as skin (exploiting skin states)\n this.skinName = skinName || TextInput.SKIN_NAME;\n this._validStates = this._validStates || TextInput.stateNames;\n this._currentState = 'background';\n this.invalidState = true;\n\n InputControl.call(this, text, theme);\n\n this._displayAsPassword = displayAsPassword || false;\n\n /**\n * timer used to indicate if the cursor is shown\n *\n * @property _cursorTimer\n * @type {Number}\n * @private\n */\n this._cursorTimer = 0;\n\n /**\n * indicates if the cursor position has changed\n *\n * @property _cursorNeedsUpdate\n * @type {Boolean}\n * @private\n */\n\n this._cursorNeedsUpdate = true;\n\n /**\n * interval for the cursor (in milliseconds)\n *\n * @property blinkInterval\n * @type {number}\n */\n this.blinkInterval = 500;\n\n /**\n * selected area (start and end)\n *\n * @type {Array}\n * @private\n */\n this.selection = [0, 0];\n\n // caret/selection sprite\n this.cursor = new PIXI.Text('|', this.theme.textStyle);\n this.addChild(this.cursor);\n\n // selection background\n this.selectionBg = new PIXI.Graphics();\n this.addChildAt(this.selectionBg, 0);\n\n // set up events\n this.boundOnMouseUp = this.onMouseUp.bind(this);\n this.boundOnMouseUpOutside = this.onMouseUpOutside.bind(this);\n this.boundOnMouseDown = this.onMouseDown.bind(this);\n this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n this.mousemove = this.touchmove = this.boundOnMouseMove;\n this.mousedown = this.touchstart = this.boundOnMouseDown;\n this.mouseup = this.touchend = this.boundOnMouseUp;\n this.mouseupoutside = this.touchendoutside = this.boundOnMouseUpOutside;\n}\n\nTextInput.prototype = Object.create(InputControl.prototype);\nTextInput.prototype.constructor = TextInput;\nmodule.exports = TextInput;\n\n\n// name of skin\nTextInput.SKIN_NAME = 'text_input';\n\n/**\n * set the text that is shown inside the input field.\n * calls onTextChange callback if text changes\n *\n * @property text\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'text', {\n get: function () {\n return this._text;\n },\n set: function (text) {\n text += ''; // add '' to assure text is parsed as string\n if (this._origText === text) {\n // return if text has not changed\n return;\n }\n this._origText = text;\n if (this._displayAsPassword) {\n text = text.replace(/./gi, '*');\n }\n this._text = text || '';\n if (!this.pixiText) {\n this.pixiText = new PIXI.Text(text, this.theme.textStyle);\n this.addChild(this.pixiText);\n } else {\n this.pixiText.text = text;\n }\n\n // update text input if this text field has the focus\n if (this.hasFocus) {\n InputWrapper.setText(this.value);\n }\n\n // reposition cursor\n this._cursorNeedsUpdate = true;\n if (this.change) {\n this.change(text);\n }\n }\n});\n\n/**\n * The maximum number of characters that may be entered. If 0,\n * any number of characters may be entered.\n * (same as maxLength for DOM inputs)\n *\n * @default 0\n * @property maxChars\n * @type String\n */\nObject.defineProperty(TextInput.prototype, 'maxChars', {\n get: function () {\n return this._maxChars;\n },\n set: function (value) {\n if (this._maxChars === value) {\n return;\n }\n InputWrapper.setMaxLength(value);\n this._maxChars = value;\n }\n});\n\nObject.defineProperty(TextInput.prototype, 'value', {\n get: function() {\n return this._origText;\n }\n});\n\n/**\n * set text and type of DOM text input\n *\n * @method onfocus\n */\nTextInput.prototype.onfocus = function() {\n InputWrapper.setText(this.value);\n InputWrapper.setMaxLength(this.maxChars);\n if (this._displayAsPassword) {\n InputWrapper.setType('password');\n } else {\n InputWrapper.setType('text');\n }\n};\n\n/**\n * set selected text\n *\n * @method updateSelection\n * @param start\n * @param end\n * @returns {boolean}\n */\nTextInput.prototype.updateSelection = function (start, end) {\n if (this.selection[0] !== start || this.selection[1] !== end) {\n this.selection[0] = start;\n this.selection[1] = end;\n InputWrapper.setSelection(start, end);\n this._cursorNeedsUpdate = true;\n this.updateSelectionBg();\n return true;\n } else {\n return false;\n }\n};\n\nTextInput.prototype.updateSelectionBg = function() {\n var start = this.posToCoord(this.selection[0]),\n end = this.posToCoord(this.selection[1]);\n\n this.selectionBg.clear();\n if (start !== end) {\n this.selectionBg.beginFill(0x0080ff);\n this.selectionBg.drawRect(0, 0, end - start, this.pixiText.height);\n this.selectionBg.x = start;\n this.selectionBg.y = this.pixiText.y;\n }\n};\n\nTextInput.prototype.onblur = function() {\n this.updateSelection(0, 0);\n};\n\nTextInput.prototype.onSubmit = function () {\n};\n\nTextInput.prototype.onKeyDown = function (e) {\n var keyCode = e.which;\n\n // ESC\n if (e.which === 27) {\n this.blur();\n return;\n }\n\n // add support for Ctrl/Cmd+A selection - select whole input text\n if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n e.preventDefault();\n this.updateSelection(0, this.text.length);\n return;\n }\n\n // block keys that shouldn't be processed\n if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n return;\n }\n\n // enter key\n if (keyCode === 13) {\n e.preventDefault();\n this.onSubmit(e);\n }\n\n // update the canvas input state information from the hidden input\n this.updateTextState();\n};\n\nTextInput.prototype.onKeyUp = function () {\n this.updateTextState();\n};\n\n/**\n * position cursor on the text\n */\nTextInput.prototype.setCursorPos = function () {\n this.cursor.x = this.textWidth(this.text.substring(0, this.cursorPos)) | 0;\n};\n\n/**\n * draw the cursor\n *\n * @method drawCursor\n */\nTextInput.prototype.drawCursor = function () {\n if (this.hasFocus || this._mouseDown) {\n var time = Date.now();\n\n // blink interval for cursor\n if ((time - this._cursorTimer) >= this.blinkInterval) {\n this._cursorTimer = time;\n this.cursor.visible = !this.cursor.visible;\n }\n\n // update cursor position\n if (this.cursor.visible && this._cursorNeedsUpdate) {\n this.setCursorPos();\n this._cursorNeedsUpdate = false;\n }\n } else {\n this.cursor.visible = false;\n }\n};\n\nTextInput.prototype.redraw = function () {\n this.drawCursor();\n Control.prototype.redraw.call(this);\n};\n\nTextInput.prototype.onMouseMove = function (e) {\n var mouse = this.mousePos(e);\n if (!this.hasFocus || !this._mouseDown || this.selectionStart < 0) { // || !this.containsPoint(mouse)) {\n return false;\n }\n\n var curPos = this.clickPos(mouse.x, mouse.y),\n start = Math.min(this.selectionStart, curPos),\n end = Math.max(this.selectionStart, curPos);\n\n if (this.updateSelection(start, end)) {\n this.cursorPos = curPos;\n this.setCursorPos();\n this._cursorNeedsUpdate = true;\n }\n return true;\n};\n\nTextInput.prototype.onMouseDown = function (e) {\n var originalEvent = e.data.originalEvent;\n if (originalEvent.which === 2 || originalEvent.which === 3) {\n originalEvent.preventDefault();\n return false;\n }\n\n // focus input\n this.focus();\n\n this._mouseDown = true;\n var mouse = this.mousePos(e);\n\n // start the selection drag if inside the input\n this.selectionStart = this.clickPos(mouse.x, mouse.y);\n this.updateSelection(this.selectionStart, this.selectionStart);\n this.cursorPos = this.selectionStart;\n this.setCursorPos();\n return true;\n};\n\nTextInput.prototype.onMouseUp = function (e) {\n var originalEvent = e.data.originalEvent;\n if (originalEvent.which === 2 || originalEvent.which === 3) {\n originalEvent.preventDefault();\n return false;\n }\n\n var mouse = this.mousePos(e);\n\n // update selection if a drag has happened\n var clickPos = this.clickPos(mouse.x, mouse.y);\n\n // update the cursor position\n if (!(this.selectionStart >= 0 && clickPos !== this.selectionStart)) {\n this.cursorPos = clickPos;\n this.setCursorPos();\n this.updateSelection(this.cursorPos, this.cursorPos);\n }\n\n this.selectionStart = -1;\n this._mouseDown = false;\n return true;\n};\n\n/**\n * synchronize TextInput with DOM element\n *\n * @method updateTextState\n */\nTextInput.prototype.updateTextState = function () {\n var text = InputWrapper.getText();\n\n if (text !== this.text) {\n this.text = text;\n }\n\n var sel = InputWrapper.getSelection();\n if (this.updateSelection(sel[0], sel[1])) {\n this.cursorPos = sel[0];\n }\n this.setCursorPos();\n};\n","var Button = require('./Button');\n\n/**\n * basic button that has a selected state which indicates if the button\n * is pressed or not.\n *\n * @class ToggleButton\n * @extends GOWN.Button\n * @memberof GOWN\n * @constructor\n */\nfunction ToggleButton(theme, skinName) {\n this.skinName = skinName || ToggleButton.SKIN_NAME;\n this._validStates = Button.stateNames.slice(0);\n this._validStates.push(ToggleButton.SELECTED_UP);\n this._validStates.push(ToggleButton.SELECTED_DOWN);\n this._validStates.push(ToggleButton.SELECTED_HOVER);\n Button.call(this, theme, this.skinName);\n\n /**\n * The pressed state of the Button\n *\n * @property selected\n * @type Boolean\n */\n this._selected = false;\n}\n\nToggleButton.prototype = Object.create( Button.prototype );\nToggleButton.prototype.constructor = ToggleButton;\nmodule.exports = ToggleButton;\n\n\nToggleButton.SKIN_NAME = 'toggle_button';\n\nToggleButton.SELECTED_UP = 'selected_up';\nToggleButton.SELECTED_DOWN = 'selected_down';\nToggleButton.SELECTED_HOVER = 'selected_hover';\n\nvar originalCurrentState = Object.getOwnPropertyDescriptor(Button.prototype, 'currentState');\n\n/**\n * The current state (one of _validStates)\n *\n * @property currentState\n * @type String\n */\nObject.defineProperty(ToggleButton.prototype, 'currentState',{\n set: function(value) {\n if (this._selected) {\n value = 'selected_' + value;\n }\n originalCurrentState.set.call(this, value);\n }\n});\n\n/**\n * Indicate if the button is selected (pressed)\n *\n * @property selected\n * @type Boolean\n */\nObject.defineProperty(ToggleButton.prototype, 'selected', {\n set: function(selected) {\n var state = this._currentState;\n this.invalidState = this._selected !== selected || this.invalidState;\n if (state.indexOf('selected_') === 0) {\n state = state.substr(9, state.length);\n }\n this._selected = selected;\n this._pressed = false; //to prevent toggling on touch/mouse up\n this.currentState = state;\n },\n get: function() {\n return this._selected;\n }\n});\n\n/**\n * toggle state\n */\nToggleButton.prototype.toggle = function() {\n this.selected = !this._selected;\n};\n\n\nToggleButton.prototype.buttonHandleEvent = Button.prototype.handleEvent;\n\n/**\n * handle Touch/Tab Event\n * @method handleEvent\n * @param {Object} type the type of the press/touch.\n * @protected\n **/\nToggleButton.prototype.handleEvent = function(type) {\n if (!this._enabled) {\n return;\n }\n\n if (type === Button.UP && this._pressed) {\n this.toggle();\n }\n this.buttonHandleEvent(type);\n};\n","/**\n * @file Main export of the gown.js core library\n * @author Andreas Bresser <andreasbresser@gmail.com>\n * @copyright 2015 Andreas Bresser\n * @license {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.core\n */\nmodule.exports = {\n Control: require('./Control'),\n Skinable: require('./Skinable'),\n\n // controls\n Application: require('./controls/Application'),\n Button: require('./controls/Button'),\n CheckBox: require('./controls/CheckBox'),\n InputControl: require('./controls/InputControl'),\n LayoutGroup: require('./controls/LayoutGroup'),\n Scrollable: require('./controls/Scrollable'),\n ScrollArea: require('./controls/ScrollArea'),\n ScrollBar: require('./controls/ScrollBar'),\n ScrollThumb: require('./controls/ScrollThumb'),\n Slider: require('./controls/Slider'),\n TextInput: require('./controls/TextInput'),\n ToggleButton: require('./controls/ToggleButton'),\n\n // layout\n HorizontalLayout: require('./layout/HorizontalLayout'),\n Layout: require('./layout/Layout'),\n LayoutAlignment: require('./layout/LayoutAlignment'),\n TiledColumnsLayout: require('./layout/TiledColumnsLayout'),\n TiledLayout: require('./layout/TiledLayout'),\n TiledRowsLayout: require('./layout/TiledRowsLayout'),\n VerticalLayout: require('./layout/VerticalLayout'),\n ViewPortBounds: require('./layout/ViewPortBounds'),\n\n // shapes\n Diamond: require('./shapes/Diamond'),\n Ellipse: require('./shapes/Ellipse'),\n Line: require('./shapes/Line'),\n Rect: require('./shapes/Rect'),\n Shape: require('./shapes/Shape'),\n\n // skin\n Theme: require('./skin/Theme')\n};\n","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * HorizontalLayout - just set alignment to\n * LayoutAlignment.HORIZONTAL_ALIGNMENT\n *\n * @class HorizontalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction HorizontalLayout() {\n LayoutAlignment.call(this);\n this.alignment = LayoutAlignment.HORIZONTAL_ALIGNMENT;\n}\n\nHorizontalLayout.prototype = Object.create( LayoutAlignment.prototype );\nHorizontalLayout.prototype.constructor = HorizontalLayout;\nmodule.exports = HorizontalLayout;\n","/**\n * basic layout stub - see LayoutAlignment\n *\n * @class Layout\n * @memberof GOWN\n * @constructor\n */\nfunction Layout() {\n this.gap = 0;\n this.padding = 0;\n}\n\nmodule.exports = Layout;\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the top.\n *\n * @property VERTICAL_ALIGN_TOP\n * @static\n */\nLayout.VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the middle.\n *\n * @property VERTICAL_ALIGN_MIDDLE\n * @static\n */\nLayout.VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * Alignment justified\n *\n * @property ALIGN_JUSTIFY\n * @static\n */\nLayout.ALIGN_JUSTIFY = 'justify';\n\n/**\n * If the total item height is smaller than the height of the bounds,\n * the items will be aligned to the bottom.\n *\n * @property VERTICAL_ALIGN_BOTTOM\n * @static\n */\nLayout.VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the left.\n *\n * @property HORIZONTAL_ALIGN_LEFT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the center.\n *\n * @property HORIZONTAL_ALIGN_CENTER\n * @static\n */\nLayout.HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If the total item width is smaller than the width of the bounds, the\n * items will be aligned to the right.\n *\n * @property HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nLayout.HORIZONTAL_ALIGN_RIGHT = 'right';\n\n\n\n/**\n * The space, in pixels, between items.\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'gap', {\n get: function() {\n return this._gap;\n },\n set: function(value) {\n if(this._gap === value) {\n return;\n }\n this._gap = value;\n this._needUpdate = true;\n }\n});\n\n/**\n * Indicates if the layout needs to be rearranged.\n *\n * @property needUpdate\n * @readonly\n */\nObject.defineProperty(Layout.prototype, 'needUpdate', {\n get: function() {\n return this._needUpdate;\n }\n});\n\n/**\n * shotrtcut to set all paddings (left, right, top, bottom)\n *\n * @property padding\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'padding', {\n set: function(value) {\n this._paddingLeft = value;\n this._paddingRight = value;\n this._paddingBottom = value;\n this._paddingTop = value;\n this._needUpdate = true;\n },\n get: function (){\n // just return paddingTop, because we do not save the\n // overall padding value (just like feathers)\n return this._paddingTop;\n }\n});\n\n/**\n * The minimum space, in pixels, above the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingTop', {\n get: function() {\n return this._paddingTop;\n },\n set: function(value) {\n if(this._paddingTop === value) {\n return;\n }\n this._paddingTop = value;\n this._needUpdate = true;\n }\n});\n\n/**\n * The minimum space, in pixels, below the items.\n *\n * @default 0\n * @property paddingTop\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingBottom', {\n get: function() {\n return this._paddingBottom;\n },\n set: function(value) {\n if(this._paddingBottom === value) {\n return;\n }\n this._paddingBottom = value;\n this._needUpdate = true;\n }\n});\n\n/**\n * The space, in pixels, that appears to the left, before the first\n * item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingLeft', {\n get: function() {\n return this._paddingLeft;\n },\n set: function(value) {\n if(this._paddingLeft === value) {\n return;\n }\n this._paddingLeft = value;\n this._needUpdate = true;\n }\n});\n\n/**\n * The space, in pixels, that appears to the right, after the last item.\n *\n * @default 0\n * @property paddingLeft\n * @type Number\n */\nObject.defineProperty(Layout.prototype, 'paddingRight', {\n get: function() {\n return this._paddingRight;\n },\n set: function(value) {\n if(this._paddingRight === value) {\n return;\n }\n this._paddingRight = value;\n this._needUpdate = true;\n }\n});\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\n/* jshint unused: false */\nLayout.prototype.layout = function (items, viewPortBounds) {\n};\n","var Layout = require('./Layout');\n\n/**\n * basic layout\n *\n * @class LayoutAlignment\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction LayoutAlignment() {\n Layout.call(this);\n}\n\nLayoutAlignment.prototype = Object.create( Layout.prototype );\nLayoutAlignment.prototype.constructor = LayoutAlignment;\nmodule.exports = LayoutAlignment;\n\nLayoutAlignment.VERTICAL_ALIGNMENT = 'vertical';\nLayoutAlignment.HORIZONTAL_ALIGNMENT = 'horizontal';\n\n/**\n * apply percentage width/height to items.\n * percentages have higher priorities than fixed with.\n * So if you set a width higher than 0 but also percentWidth,\n * the width will be recalculated according to percentWidth.\n *\n * @method applyPercent\n * @param items\n * @param explicit space we have for the components\n * (this function will handle padding and gap, so the explicitWidth is\n * for the whole available width)\n */\nLayoutAlignment.prototype.applyPercent = function(items, explicit) {\n var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n var itemCount = items.length;\n var remaining = explicit;\n var totalExplicit = 0;\n var totalPercent = 0;\n\n var i, itemPercent, item;\n // sum up width/height required for all items\n for (i = 0; i < itemCount; i++) {\n item = items[i];\n var itemSpace;\n itemPercent = _hor ? item.percentWidth : item.percentHeight;\n itemSpace = _hor ? item.width : item.height;\n\n if (!isNaN(itemPercent) && itemPercent !== undefined &&\n itemPercent !== null) {\n totalPercent += itemPercent;\n } else if (!isNaN(itemSpace)) {\n // no percentWidth/percentHeight set for this item\n totalExplicit += itemSpace;\n }\n }\n\n // add space for all gaps\n totalExplicit += this._firstGap > 0 ? this._firstGap : this._gap;\n totalExplicit += (this._gap * (itemCount - 3));\n totalExplicit += this._lastGap > 0 ? this._lastGap : this._gap;\n\n var padding = _hor ?\n this._paddingLeft + this._paddingRight :\n this._paddingTop + this._paddingBottom;\n totalExplicit += padding;\n\n // use whole available space - if we do not sum up to 100 we will\n // stretch the items\n if(totalPercent < 100) {\n totalPercent = 100;\n }\n\n remaining -= totalExplicit;\n var percentToPixels = remaining / totalPercent;\n // claculate width/height for each item based on remaining width/height\n for(i = 0; i < itemCount; i++) {\n item = items[i];\n itemPercent = _hor ? item.percentWidth : item.percentHeight;\n if (itemPercent > 0) {\n if (_hor) {\n item.width = percentToPixels * itemPercent;\n } else {\n item.height = percentToPixels * itemPercent;\n }\n }\n }\n};\n\n/**\n * get current gap (includes first and last gap)\n *\n * @method _currentGap\n * @private\n * @param i current item position\n * @param items list of items (to determine if we are at the last gap)\n */\nLayoutAlignment.prototype._currentGap = function(i, items) {\n if(!isNaN(this._firstGap) && i === 0)\n {\n return this._firstGap;\n }\n else if(!isNaN(this._lastGap) && i > 0 && i === items.length - 2)\n {\n return this._lastGap;\n }\n return this._gap;\n};\n\n/**\n * Position (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted {Array}\n * @param viewPortBounds {ViewPortBounds}\n */\nLayoutAlignment.prototype.layout = function(items, viewPortBounds) {\n var _hor = (this.alignment === LayoutAlignment.HORIZONTAL_ALIGNMENT);\n\n // get max. dimensions from viewport bounds\n var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n var explicitSpace = _hor ? explicitWidth : explicitHeight;\n var paddingStart = _hor ? this._paddingLeft : this._paddingTop;\n\n // recalculate width/height\n this.applyPercent(items, explicitSpace);\n\n var position = paddingStart;\n\n // calculate item position (x/y coordinates)\n for(var i = 0; i < items.length; i++)\n {\n var item = items[i];\n\n // move item to position calculated in previous loop\n if (_hor) {\n item.x = Math.floor(position);\n } else {\n item.y = Math.floor(position);\n }\n var itemSpace = _hor ? item.width : item.height;\n // calculate position for next item\n position += itemSpace + this._currentGap(i, items);\n }\n};\n\n/**\n * The space between the first and second element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'firstGap', {\n set: function(value) {\n if (value === this._firstGap) {\n return;\n }\n this._firstGap = value;\n this._needUpdate = true;\n },\n get: function() {\n return this._firstGap;\n }\n});\n\n/**\n * The space between the last and second-to-last element\n *\n * @property firstGap\n * @type String\n */\nObject.defineProperty(LayoutAlignment.prototype, 'lastGap', {\n set: function(value) {\n if (value === this._lastGap) {\n return;\n }\n this._lastGap = value;\n this._needUpdate = true;\n },\n get: function() {\n return this._lastGap;\n }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled columns Layout\n * (roughly based on starling TiledColumnsLayout)\n *\n * @class TiledColumnsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\n\nfunction TiledColumnsLayout() {\n TiledLayout.call(this);\n this._paging = TiledLayout.PAGING_VERTICAL;\n this._orientation = TiledLayout.ORIENTATION_COLUMNS;\n}\n\nTiledColumnsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledColumnsLayout.prototype.constructor = TiledColumnsLayout;\nmodule.exports = TiledColumnsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>verticalGap</code>, but the value of\n * <code>horizontalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledColumnsLayout.prototype, 'gap', {\n set: function(value) {\n this._verticalGap = value;\n this._horizontalGap = value;\n this._needUpdate = true;\n },\n get: function() {\n return this._verticalGap;\n }\n});","var Layout = require('./Layout');\n\n/**\n * TiledLayout a layout for tiled rows/columns\n *\n * @class TiledLayout\n * @extends GOWN.Layout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledLayout() {\n Layout.call(this);\n this._useSquareTiles = false;\n this._horizontalGap = 0;\n this._verticalGap = 0;\n this._tileHorizontalAlign = TiledLayout.TILE_HORIZONTAL_ALIGN_CENTER;\n this._tileVerticalAlign = TiledLayout.TILE_VERTICAL_ALIGN_MIDDLE;\n this._paging = TiledLayout.PAGING_NONE;\n this._orientation = TiledLayout.ORIENTATION_ROWS;\n this._needUpdate = true;\n}\n\nTiledLayout.prototype = Object.create( Layout.prototype );\nTiledLayout.prototype.constructor = TiledLayout;\nmodule.exports = TiledLayout;\n\n\nTiledLayout.ORIENTATION_ROWS = 'rows';\nTiledLayout.ORIENTATION_COLUMNS = 'columns';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the top edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_TOP\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_TOP = 'top';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the middle of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_MIDDLE\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_MIDDLE = 'middle';\n\n/**\n * If an item height is smaller than the height of a tile, the item will\n * be aligned to the bottom edge of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_BOTTOM\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_BOTTOM = 'bottom';\n\n/**\n * The item will be resized to fit the height of the tile.\n *\n * @property TILE_VERTICAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the left edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_LEFT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_LEFT = 'left';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the center of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_CENTER\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_CENTER = 'center';\n\n/**\n * If an item width is smaller than the width of a tile, the item will\n * be aligned to the right edge of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_RIGHT\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT = 'right';\n\n/**\n * The item will be resized to fit the width of the tile.\n *\n * @property TILE_HORIZONTAL_ALIGN_JUSTIFY\n * @static\n */\nTiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY = 'justify';\n\n/**\n * The items will be positioned in pages horizontally from left to right.\n *\n * @property PAGING_HORIZONTAL\n * @static\n */\nTiledLayout.PAGING_HORIZONTAL = 'horizontal';\n\n/**\n * The items will be positioned in pages vertically from top to bottom.\n *\n * @property PAGING_VERTICAL\n * @static\n */\nTiledLayout.PAGING_VERTICAL = 'vertical';\n\n\n/**\n * Positions (and possibly resizes) the supplied items.\n *\n * @method layout\n * @param items items that will be layouted\n * @param viewPortBounds\n */\nTiledLayout.prototype.layout = function (items, viewPortBounds) {\n var _rows = this._orientation === TiledLayout.ORIENTATION_ROWS;\n if(items.length === 0) {\n return;\n }\n\n var maxWidth = viewPortBounds ? viewPortBounds.maxWidth : Number.POSITIVE_INFINITY;\n var maxHeight = viewPortBounds ? viewPortBounds.maxHeight : Number.POSITIVE_INFINITY;\n var explicitWidth = viewPortBounds ? viewPortBounds.explicitWidth : NaN;\n var explicitHeight = viewPortBounds ? viewPortBounds.explicitHeight : NaN;\n\n var i, item;\n var tileWidth = 0;\n var tileHeight = 0;\n\n // get size for tiles by saving the highest/widest tile.\n for(i = 0; i < items.length; i++) {\n item = items[i];\n if(!item) {\n continue;\n }\n var itemWidth = item.width;\n var itemHeight = item.height;\n if(itemWidth > tileWidth) {\n tileWidth = itemWidth;\n }\n if(itemHeight > tileHeight) {\n tileHeight = itemHeight;\n }\n }\n\n // make tiles square\n if (this._useSquareTiles) {\n if(tileWidth > tileHeight) {\n tileHeight = tileWidth;\n }\n else if(tileHeight > tileWidth) {\n tileWidth = tileHeight;\n }\n }\n\n // calculate tiles needed (and their width/height)\n var availableWidth = NaN;\n var availableHeight = NaN;\n\n var horizontalTileCount = _rows ? items.length : 1;\n\n if(!isNaN(explicitWidth)) {\n availableWidth = explicitWidth;\n horizontalTileCount = (explicitWidth -\n this._paddingLeft - this._paddingRight +\n this._horizontalGap) / (tileWidth + this._horizontalGap);\n }\n else if(!isNaN(maxWidth)) {\n availableWidth = maxWidth;\n horizontalTileCount = (maxWidth -\n this._paddingLeft - this._paddingRight +\n this._horizontalGap) / (tileWidth + this._horizontalGap);\n }\n horizontalTileCount = Math.floor(Math.max(horizontalTileCount, 1));\n\n var verticalTileCount = _rows ? 1 : items.length;\n if(!isNaN(explicitHeight)) {\n availableHeight = explicitHeight;\n verticalTileCount = (explicitHeight -\n this._paddingTop - this._paddingBottom +\n this._verticalGap) / (tileHeight + this._verticalGap);\n } else if(!isNaN(maxHeight)) {\n availableHeight = maxHeight;\n verticalTileCount = (maxHeight -\n this._paddingTop - this._paddingBottom +\n this._verticalGap) / (tileHeight + this._verticalGap);\n }\n verticalTileCount = Math.floor(Math.max(verticalTileCount, 1));\n\n var startX = this._paddingLeft;\n var startY = this._paddingTop;\n\n var perPage = horizontalTileCount * verticalTileCount;\n var pageIndex = 0;\n var nextPageStartIndex = perPage;\n var pageStart = _rows ? startX : startY;\n var positionX = startX;\n var positionY = startY;\n var itemIndex = 0;\n for(i = 0; i < items.length; i++)\n {\n item = items[i];\n if (_rows) {\n if(itemIndex !== 0 && itemIndex % horizontalTileCount === 0)\n {\n positionX = pageStart;\n positionY += tileHeight + this._verticalGap;\n }\n } else { // columns\n if(itemIndex !== 0 && i % verticalTileCount === 0)\n {\n positionX += tileWidth + this._horizontalGap;\n positionY = pageStart;\n }\n }\n if(itemIndex === nextPageStartIndex) {\n pageIndex++;\n nextPageStartIndex += perPage;\n\n //we can use availableWidth and availableHeight here without\n //checking if they're NaN because we will never reach a\n //new page without them already being calculated.\n if (_rows) {\n if(this._paging === TiledLayout.PAGING_HORIZONTAL)\n {\n positionX = pageStart === startX + availableWidth * pageIndex;\n positionY = startY;\n } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n positionY = startY + availableHeight * pageIndex;\n }\n } else { // columns\n if(this._paging === TiledLayout.PAGING_HORIZONTAL) {\n positionX = startX + availableWidth * pageIndex;\n } else if(this._paging === TiledLayout.PAGING_VERTICAL) {\n positionX = startX;\n positionY = pageStart = startY + availableHeight * pageIndex;\n }\n }\n }\n if(item) {\n switch(this._tileHorizontalAlign) {\n case TiledLayout.TILE_HORIZONTAL_ALIGN_JUSTIFY:\n item.x = positionX;\n item.width = tileWidth;\n break;\n case TiledLayout.TILE_HORIZONTAL_ALIGN_LEFT:\n item.x = positionX;\n break;\n case TiledLayout.TILE_HORIZONTAL_ALIGN_RIGHT:\n item.x = positionX + tileWidth - item.width;\n break;\n default: //center or unknown\n item.x = positionX + (tileWidth - item.width) / 2;\n }\n switch(this._tileVerticalAlign) {\n case TiledLayout.TILE_VERTICAL_ALIGN_JUSTIFY:\n item.y = positionY;\n item.height = tileHeight;\n break;\n case TiledLayout.TILE_VERTICAL_ALIGN_TOP:\n item.y = positionY;\n break;\n case TiledLayout.TILE_VERTICAL_ALIGN_BOTTOM:\n item.y = positionY + tileHeight - item.height;\n break;\n default: //middle or unknown\n item.y = positionY + (tileHeight - item.height) / 2;\n }\n }\n if (_rows) {\n positionX += tileWidth + this._horizontalGap;\n } else { // columns\n positionY += tileHeight + this._verticalGap;\n }\n itemIndex++;\n }\n\n this._needUpdate = false;\n};\n\n/**\n * use same width and height for the tiles (calculated by biggest square)\n *\n * @property useSquareTiles\n * @type Boolean\n */\nObject.defineProperty(TiledLayout.prototype, 'useSquareTiles', {\n set: function(useSquareTiles) {\n this._useSquareTiles = useSquareTiles;\n this._needUpdate = true;\n },\n get: function() {\n return this._useSquareTiles;\n }\n});","var TiledLayout = require('./TiledLayout');\n\n/**\n * Tiled rows Layout\n * (roughly based on starling TiledRowsLayout)\n *\n * @class TiledRowsLayout\n * @extends GOWN.TiledLayout\n * @memberof GOWN\n * @constructor\n */\nfunction TiledRowsLayout() {\n TiledLayout.call(this);\n this._paging = TiledLayout.PAGING_HORIZONTAL;\n this._orientation = TiledLayout.ORIENTATION_ROWS;\n}\n\nTiledRowsLayout.prototype = Object.create( TiledLayout.prototype );\nTiledRowsLayout.prototype.constructor = TiledRowsLayout;\nmodule.exports = TiledRowsLayout;\n\n/**\n * Quickly sets both <code>horizontalGap</code> and <code>verticalGap</code>\n * to the same value. The <code>gap</code> getter always returns the\n * value of <code>horizontalGap</code>, but the value of\n * <code>verticalGap</code> may be different.\n *\n * @default 0\n *\n * @see #_horizontalGap\n * @see #_verticalGap\n *\n * @property gap\n * @type Number\n */\nObject.defineProperty(TiledRowsLayout.prototype, 'gap', {\n get: function() {\n return this._horizontalGap;\n },\n set: function(value) {\n this._verticalGap = value;\n this._horizontalGap = value;\n this._needUpdate = true;\n }\n});","var LayoutAlignment = require('./LayoutAlignment');\n\n/**\n * VerticalLayout - just set alignment to\n * LayoutAlignment.VERTICAL_ALIGNMENT\n *\n * @class VerticalLayout\n * @extends GOWN.LayoutAlignment\n * @memberof GOWN\n * @constructor\n */\nfunction VerticalLayout() {\n LayoutAlignment.call(this);\n this.alignment = LayoutAlignment.VERTICAL_ALIGNMENT;\n}\n\nVerticalLayout.prototype = Object.create( LayoutAlignment.prototype );\nVerticalLayout.prototype.constructor = VerticalLayout;\nmodule.exports = VerticalLayout;\n","/**\n * define viewport dimensions\n *\n * @class HorizontalLayout\n * @memberof GOWN\n * @constructor\n */\nfunction ViewPortBounds() {\n /**\n * The explicit width of the view port, in pixels. If <code>NaN</code>,\n * there is no explicit width value.\n *\n * @property explicitWidth\n */\n this.explicitWidth = NaN;\n\n /**\n * The explicit height of the view port, in pixels. If <code>NaN</code>,\n * there is no explicit height value.\n *\n * @property explicitHeight\n */\n this.explicitHeight = NaN;\n\n /**\n * x-position\n *\n * @property x\n */\n this.x = 0;\n\n /**\n * y-position\n *\n * @property y\n */\n this.y = 0;\n}\n\nmodule.exports = ViewPortBounds;","var Shape = require('./Shape');\n\n/**\n * basic diamond shape\n *\n * @class Diamond\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Diamond(color, alpha, width, height) {\n Shape.call(this, color, alpha, width, height);\n}\n\nDiamond.prototype = Object.create( Shape.prototype );\nDiamond.prototype.constructor = Diamond;\nmodule.exports = Diamond;\n\n/**\n * draw the diamond during redraw.\n *\n * @method _drawShape\n * @private\n */\nDiamond.prototype._drawShape = function() {\n if (this.width <= 0 || this.height <= 0) {\n return;\n }\n this.graphics.moveTo(this._width/2, 0)\n .lineTo(this._width, this._height/2)\n .lineTo(this._width/2, this._height)\n .lineTo(0, this._height/2)\n .lineTo(this._width/2, 0);\n};","var Shape = require('./Shape');\n\n/**\n * basic ellipse shape\n *\n * @class Ellipse\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\nfunction Ellipse(color, alpha, width, height) {\n Shape.call(this, color, alpha, width, height);\n}\n\nEllipse.prototype = Object.create( Shape.prototype );\nEllipse.prototype.constructor = Ellipse;\nmodule.exports = Ellipse;\n\n/**\n * draw the ellipse during redraw.\n *\n * @method _drawShape\n * @private\n */\nEllipse.prototype._drawShape = function() {\n if (this.width <= 0 || this.height <= 0) {\n return;\n }\n this.drawEllipse(0, 0, this.width, this.height);\n};","var Shape = require('./Shape');\n\n/**\n * basic line\n *\n * @class Line\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Line(color, alpha, width, height, reverse) {\n Shape.call(this, color, alpha, width, height);\n this._reverse = reverse;\n}\n\nLine.prototype = Object.create( Shape.prototype );\nLine.prototype.constructor = Line;\nmodule.exports = Line;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nLine.prototype._drawShape = function() {\n if (this.width <= 0 || this.height <= 0) {\n return;\n }\n if (this.reverse) {\n this.moveTo(this._width, 0);\n this.lineTo(0, this._height);\n } else {\n this.moveTo(0, 0);\n this.lineTo(this._width, this._height);\n }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Line.prototype, 'reverse', {\n get: function() {\n return this._reverse;\n },\n set: function(reverse) {\n this._reverse = reverse;\n this.invalid = true;\n }\n});\n","var Shape = require('./Shape');\n\n/**\n * basic rectangular shape\n *\n * @class Rect\n * @extends GOWN.Shape\n * @memberof GOWN\n * @constructor\n */\n\nfunction Rect(color, alpha, width, height, radius) {\n Shape.call(this, color, alpha, width, height);\n this._radius = radius;\n}\n\nRect.prototype = Object.create( Shape.prototype );\nRect.prototype.constructor = Rect;\nmodule.exports = Rect;\n\n/**\n * draw the rect during redraw. will use drawRoundRect if a radius is provided.\n *\n * @method _drawShape\n * @private\n */\nRect.prototype._drawShape = function() {\n if (this.width <= 0 || this.height <= 0) {\n return;\n }\n if (this.radius) {\n this.drawRoundedRect(0, 0,\n this._width, this._height,\n this.radius);\n } else {\n this.drawRect(0, 0, this._width, this._height);\n }\n};\n\n/**\n * The radius of the rectangle border, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\nObject.defineProperty(Rect.prototype, 'radius', {\n get: function() {\n return this._radius;\n },\n set: function(radius) {\n this._radius = radius;\n this.invalid = true;\n }\n});","/**\n * shape base class\n *\n * @class Shape\n * @extends PIXI.Graphics\n * @memberof GOWN\n * @constructor\n */\nfunction Shape(color, alpha, width, height) {\n PIXI.Graphics.call(this);\n this._color = color;\n this._alpha = alpha || 1.0;\n this._width = width;\n this._height = height;\n this.invalid = true;\n}\n\nShape.prototype = Object.create( PIXI.Graphics.prototype );\nShape.prototype.constructor = Shape;\nmodule.exports = Shape;\n\n// setter/getter\n/**\n * The width of the shape, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'width', {\n get: function() {\n return this._width;\n },\n set: function(width) {\n this._width = width;\n this.invalid = true;\n }\n});\n\n/**\n * The height of the shape, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(Shape.prototype, 'height', {\n get: function() {\n return this._height;\n },\n set: function(height) {\n this._height = height;\n this.invalid = true;\n }\n});\n\n/**\n * The fill color of the shape, setting this will redraw the component.\n *\n * @property color\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'color', {\n get: function() {\n return this._color;\n },\n set: function(color) {\n this._color = color;\n this.invalid = true;\n }\n});\n\n/**\n * The alpha of the shape, setting this will redraw the component.\n *\n * @property alpha\n * @type Number\n */\n\nObject.defineProperty(Shape.prototype, 'alpha', {\n get: function() {\n return this._alpha;\n },\n set: function(alpha) {\n this._alpha = alpha;\n this.invalid = true;\n }\n});\n\n/**\n * apply the color to the shape (called during redraw)\n *\n * @method applyColor\n */\nShape.prototype.applyColor = function() {\n this.beginFill(this.color, this.alpha);\n};\n\n/**\n * apply the border around shape (called during redraw)\n *\n * @method drawBorder\n */\nShape.prototype.drawBorder = function() {\n if (this.border) {\n this.lineStyle(this.border, this.borderColor);\n }\n};\n\n/**\n * draw the shape during redraw. defaults to a simple rect\n *\n * @method _drawShape\n * @private\n */\nShape.prototype._drawShape = function() {\n if (this.width <= 0 || this.height <= 0) {\n return;\n }\n // default shape is a rect\n this.drawRect(0, 0, this._width, this._height);\n};\n\n\nShape.prototype.updateTransform = function() {\n this.redraw();\n\n PIXI.Graphics.prototype.updateTransform.call(this);\n};\n\n\n/**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\nShape.prototype.redraw = function() {\n if(!this.invalid) {\n return;\n }\n\n this.clear();\n this.applyColor();\n this.drawBorder();\n this._drawShape();\n\n this.invalid = false;\n};\n","var ScaleContainer = require('../../utils/ScaleContainer');\nvar ThemeFont = require('./ThemeFont');\n/**\n * basic theming/skinning.\n *\n * @class Theme\n * @memberof GOWN\n * @constructor\n */\nfunction Theme(global) {\n // at its core a theme is just a dict that holds a collection of skins\n this._skins = {};\n\n // default font for labels (e.g. buttons)\n this.textStyle = this.textStyle || new ThemeFont();\n this.textStyle.clone();\n\n if (global === true || global === undefined) {\n GOWN.theme = this;\n }\n this.textureCache = null;\n // own skin for scroll/slider track\n // (uses the default button skin otherwise)\n this.thumbSkin = true;\n\n // desktop themes have a hover skin if the mouse moves over the button\n this.hoverSkin = true;\n}\nmodule.exports = Theme;\n\n/**\n * Set skin for ui component\n *\n * @method setSkin\n * @param comp ui-component that we want to skin, e.g. \"button\" {String}\n * @param id id for the skin (e.g. state when the skinning function will be applied {String}\n * @param skin skin-function that will executed once the component gets updated {String}\n */\nTheme.prototype.setSkin = function(comp, id, skin) {\n this._skins[comp] = this._skins[comp] || {};\n this._skins[comp][id] = skin;\n // TODO: dispatch event - the skin of \"comp\"\n};\n\n/**\n * Set up the asset loader and load files\n *\n * @method loadImage\n * @param jsonPath {Array}\n */\nTheme.prototype.loadImage = function(jsonPath) {\n this._jsonPath = jsonPath;\n GOWN.loader\n .add(jsonPath)\n .load(this.loadComplete.bind(this));\n};\n\n/**\n * executed when loadImage has finished\n *\n * @method loadComplete\n */\nTheme.prototype.loadComplete = function(loader, resources) {\n this.textureCache = resources.resources[this._jsonPath].textures;\n};\n\n/**\n * Create new Scalable Container\n *\n * @method getScaleContainer\n * @param name id defined in the asset loader {String}\n * @param grid grid defining the inner square of the scalable container {Rectangle}\n * @returns {Function}\n */\nTheme.prototype.getScaleContainer = function(name, grid) {\n var scope = this;\n return function() {\n var texture = scope.textureCache[name];\n if(!texture) {\n throw new Error('The frameId \"' + name + '\" does not exist ' +\n 'in the texture cache');\n }\n return new ScaleContainer(texture, grid);\n\n };\n};\n\n/**\n * Create new Sprite from image name\n *\n * @method getImage\n * @param name id defined in the asset loader {String}\n * @returns {Function}\n */\nTheme.prototype.getImage = function(name) {\n var scope = this;\n return function() {\n return new PIXI.Sprite(scope.textureCache[name]);\n };\n};\n\n/**\n * Get skin by component and state (or type)\n *\n * @method getSkin\n * @param comp name of the component (e.g. button) {String}\n * @param state (state or type of the skin e.g. \"up\") {String}\n * @returns {DisplayObject}\n */\nTheme.prototype.getSkin = function(comp, state) {\n if (this._skins[comp] && this._skins[comp][state]) {\n return this._skins[comp][state]();\n }\n return null;\n};\n\n/**\n * Shortcut to remove the theme from global context\n *\n * @method removeTheme\n */\nTheme.removeTheme = function() {\n GOWN.theme = undefined;\n};\n","var OPTIONS = ['fontSize', 'fontFamily', 'fill', 'align', 'stroke',\n 'strokeThickness', 'wordWrap', 'wordWrapWidth', 'lineHeight',\n 'dropShadow', 'dropShadowColor', 'dropShadowAngle',\n 'dropShadowDistance', 'padding', 'textBaseline',\n 'lineJoin', 'miterLimit'];\n\n/**\n * @class ThemeFont\n * @memberof GOWN\n * @constructor\n */\nfunction ThemeFont(data) {\n for(var key in data) {\n if(OPTIONS.indexOf(key) !== -1) {\n this[key] = data[key];\n }\n }\n\n this.fill = this.fill || '#000';\n // default font for label (e.g. buttons)\n this._fontFamily = this._fontFamily || 'Arial';\n this._fontSize = this._fontSize || 12;\n}\n\nmodule.exports = ThemeFont;\n\n\n/**\n * clone ThemeFont instance\n *\n * @method clone\n */\nThemeFont.prototype.clone = function() {\n var re = new ThemeFont();\n for(var key in this) {\n if(OPTIONS.indexOf(key) !== -1) {\n re[key] = this[key];\n }\n }\n return re;\n};\n\n/**\n * update font string\n *\n * @method _updateFont\n * @private\n */\nThemeFont.prototype._updateFont = function() {\n this._font = this._fontSize + 'px ' + this._fontFamily;\n};\n\n/**\n * instead of setting font using fontFamily and fontSize is encouraged\n *\n * @property font\n * @type String\n */\nObject.defineProperty(ThemeFont.prototype, 'font', {\n get: function() {\n return this._font;\n }\n});\n\n\n/**\n * Font Size\n *\n * @property fontSize\n * @type Number\n */\nObject.defineProperty(ThemeFont.prototype, 'fontSize', {\n get: function() {\n return this._fontSize;\n },\n set: function(value) {\n this._fontSize = value;\n this._updateFont();\n }\n});\n\n\n/**\n * Font Familiy\n *\n * @property fontFamily\n * @type String\n */\nObject.defineProperty(ThemeFont.prototype, 'fontFamily', {\n get: function() {\n return this._fontFamily;\n },\n set: function(value) {\n this._fontFamily = value;\n this._updateFont();\n }\n});\n","if (typeof PIXI === 'undefined') {\n if (window.console) {\n window.console.warn('pixi.js has to be loaded before loading gown.js');\n }\n} else {\n\n var core = module.exports = require('./core');\n\n // add core plugins.\n core.utils = require('./utils');\n\n // use default pixi loader\n core.loader = PIXI.loader;\n\n // mixin the deprecation features.\n //Object.assign(core, require('./deprecation'));\n\n // export GOWN globally.\n global.GOWN = core;\n\n}\n","/**\n * Wrapper for DOM Text Input\n *\n * based on PIXI.Input InputObject by Sebastian Nette,\n * see https://github.com/SebastianNette/PIXI.Input\n *\n * @class InputWrapper\n * @memberof GOWN\n * @static\n */\nfunction InputWrapper()\n{\n}\nmodule.exports = InputWrapper;\n\n/**\n * DOM input field.\n * we use one input field for all InputControls\n *\n * @property hiddenInput\n * @type DOMObject\n * @static\n */\nInputWrapper.hiddenInput = null;\n\n/**\n * create/return unique input field.\n * @returns {DOMObject}\n */\nInputWrapper.createInput = function()\n{\n if (!InputWrapper.hiddenInput) {\n var input = document.createElement('input');\n input.type = 'text';\n input.tabindex = -1;\n input.style.position = 'fixed';\n input.style.opacity = 0;\n input.style.pointerEvents = 'none';\n input.style.left = '0px';\n input.style.bottom = '0px';\n input.style.left = '-100px';\n input.style.top = '-100px';\n input.style.zIndex = 10;\n\n // add blur handler\n input.addEventListener('blur', function()\n {\n if (GOWN.InputControl.currentInput)\n {\n GOWN.InputControl.currentInput.onMouseUpOutside();\n }\n }, false);\n\n // on key down\n input.addEventListener('keydown', function(e)\n {\n if (GOWN.InputControl.currentInput)\n {\n e = e || window.event;\n if (GOWN.InputControl.currentInput.hasFocus)\n {\n GOWN.InputControl.currentInput.onKeyDown(e);\n }\n }\n });\n\n // on key up\n input.addEventListener('keyup', function(e)\n {\n if(GOWN.InputControl.currentInput)\n {\n e = e || window.event;\n if (GOWN.InputControl.currentInput.hasFocus)\n {\n GOWN.InputControl.currentInput.onKeyUp(e);\n }\n }\n });\n\n document.body.appendChild(input);\n\n InputWrapper.hiddenInput = input;\n }\n return InputWrapper.hiddenInput;\n};\n\n/**\n * key to get text ('value' for default input field)\n * @type {string}\n * @static\n * @private\n */\nInputWrapper.textProp = 'value';\n\n/**\n * activate the text input\n */\nInputWrapper.focus = function()\n{\n if (InputWrapper.hiddenInput) {\n InputWrapper.hiddenInput.focus();\n }\n};\n\n/**\n * deactivate the text input\n */\nInputWrapper.blur = function()\n{\n if (InputWrapper.hiddenInput) {\n InputWrapper.hiddenInput.blur();\n }\n};\n\n\n/**\n * set selection\n * @returns {DOMObject}\n */\nInputWrapper.setSelection = function(start, end)\n{\n if (InputWrapper.hiddenInput) {\n InputWrapper.hiddenInput.selectionStart = start;\n InputWrapper.hiddenInput.selectionEnd = end;\n } else {\n InputWrapper._selection = [start, end];\n }\n};\n\n/**\n * get start and end of selection\n * @returns {Array}\n */\nInputWrapper.getSelection = function() {\n if (InputWrapper.hiddenInput) {\n return [\n InputWrapper.hiddenInput.selectionStart,\n InputWrapper.hiddenInput.selectionEnd\n ];\n } else {\n return InputWrapper._selection;\n }\n};\n\n/**\n * get text value from hiddenInput\n * @returns {String}\n */\nInputWrapper.getText = function() {\n if (InputWrapper.hiddenInput) {\n var textProp = InputWrapper.textProp;\n var txt = InputWrapper.hiddenInput[textProp];\n return txt.replace(/\\r/g, '');\n } else {\n return InputWrapper._text;\n }\n\n};\n\n/**\n * get text value to hiddenInput\n * @param {String} text\n */\nInputWrapper.setText = function(text) {\n if (InputWrapper.hiddenInput) {\n var textProp = InputWrapper.textProp;\n InputWrapper.hiddenInput[textProp] = text;\n } else {\n InputWrapper._text = text;\n }\n};\n\n/**\n * set max. length setting it to 0 will allow unlimited text input\n * @param length\n */\nInputWrapper.setMaxLength = function(length) {\n if (InputWrapper.hiddenInput) {\n if (!length || length < 0) {\n InputWrapper.hiddenInput.removeAttribute('maxlength');\n } else {\n InputWrapper.hiddenInput.setAttribute('maxlength', length);\n }\n } else {\n InputWrapper._maxLength = length;\n }\n};\n\nInputWrapper.setType = function(type) {\n if (InputWrapper.hiddenInput) {\n InputWrapper.hiddenInput.type = type;\n } else {\n InputWrapper._type = type;\n }\n};\n\nInputWrapper.getType = function() {\n if (InputWrapper.hiddenInput) {\n return InputWrapper.hiddenInput.type;\n } else {\n return InputWrapper._type;\n }\n};","/**\n * Scale 9 Container.\n * e.g. useful for scalable buttons.\n *\n * @class ScaleContainer\n * @extends PIXI.Container\n * @memberof GOWN\n * @constructor\n */\n\nfunction ScaleContainer(texture, rect) {\n PIXI.Container.call( this );\n\n this.rect = rect;\n this.baseTexture = texture.baseTexture;\n this.frame = texture.frame;\n\n this._width = this.frame.width;\n this._height = this.frame.height;\n\n // left / middle / right width\n var lw = rect.x;\n var mw = rect.width;\n var rw = this.frame.width - (mw + lw);\n\n // top / center / bottom height\n var th = rect.y;\n var ch = rect.height;\n var bh = this.frame.height - (ch + th);\n\n // top\n if (lw > 0 && th > 0) {\n this.tl = this._getTexture(0, 0, lw, th);\n this.addChild(this.tl);\n }\n if (mw > 0 && th > 0) {\n this.tm = this._getTexture(lw, 0, mw, th);\n this.addChild(this.tm);\n this.tm.x = lw;\n }\n if (rw > 0 && th > 0) {\n this.tr = this._getTexture(lw + mw, 0, rw, th);\n this.addChild(this.tr);\n }\n\n // center\n if (lw > 0 && ch > 0) {\n this.cl = this._getTexture(0, th, lw, ch);\n this.addChild(this.cl);\n this.cl.y = th;\n }\n if (mw > 0 && ch > 0) {\n this.cm = this._getTexture(lw, th, mw, ch);\n this.addChild(this.cm);\n this.cm.y = th;\n this.cm.x = lw;\n }\n if (rw > 0 && ch > 0) {\n this.cr = this._getTexture(lw + mw, th, rw, ch);\n this.addChild(this.cr);\n this.cr.y = th;\n }\n\n // bottom\n if (lw > 0 && bh > 0) {\n this.bl = this._getTexture(0, th + ch, lw, bh);\n this.addChild(this.bl);\n }\n if (mw > 0 && bh > 0) {\n this.bm = this._getTexture(lw, th + ch, mw, bh);\n this.addChild(this.bm);\n this.bm.x = lw;\n }\n if (rw > 0 && bh > 0) {\n this.br = this._getTexture(lw + mw, th + ch, rw, bh);\n this.addChild(this.br);\n }\n}\n\n// constructor\nScaleContainer.prototype = Object.create( PIXI.Container.prototype );\nScaleContainer.prototype.constructor = ScaleContainer;\nmodule.exports = ScaleContainer;\n\n/**\n * set scaling width and height\n *\n * @method _updateScales\n * @private\n */\nScaleContainer.prototype._updateScales = function() {\n this._positionTilable();\n\n var scaleOriginals = this.scaleOriginals = {};\n\n var scaleOriginal = function(name, elem) {\n if (elem && elem.width && elem.height) {\n scaleOriginals[name] = {\n width: elem.width,\n height: elem.height\n };\n }\n };\n\n scaleOriginal('tl', this.tl);\n scaleOriginal('tm', this.tm);\n scaleOriginal('tr', this.tr);\n\n scaleOriginal('cl', this.cl);\n scaleOriginal('cm', this.cm);\n scaleOriginal('cr', this.cr);\n\n scaleOriginal('bl', this.bl);\n scaleOriginal('bm', this.bm);\n scaleOriginal('br', this.br);\n};\n\n/**\n * create a new texture from a base-texture by given dimensions\n *\n * @method _getTexture\n * @private\n */\nScaleContainer.prototype._getTexture = function(x, y, w, h) {\n var frame = new PIXI.Rectangle(this.frame.x+x, this.frame.y+y, w, h);\n var t = new PIXI.Texture(this.baseTexture, frame, frame.clone(), null);\n return new PIXI.Sprite(t);\n};\n\n/**\n * The width of the container, setting this will redraw the component.\n *\n * @property width\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'width', {\n get: function() {\n return this._width;\n },\n set: function(value) {\n if (this._width !== value) {\n this._width = value;\n this.invalid = true;\n this._updateScales();\n }\n }\n});\n\n/**\n * The height of the container, setting this will redraw the component.\n *\n * @property height\n * @type Number\n */\nObject.defineProperty(ScaleContainer.prototype, 'height', {\n get: function() {\n return this._height;\n },\n set: function(value) {\n if (this._height !== value) {\n this._height = value;\n this.invalid = true;\n this._updateScales();\n }\n }\n});\n\n/**\n * update before draw call (reposition textures)\n *\n * @method redraw\n */\nScaleContainer.prototype.redraw = function() {\n if (this.invalid) {\n this._positionTilable();\n this.invalid = false;\n }\n};\n\n/**\n * recalculate the position of the tiles (every time width/height changes)\n *\n * @method _positionTilable\n * @private\n */\nScaleContainer.prototype._positionTilable = function() {\n // left / middle / right width\n var lw = this.rect.x;\n var mw = this.rect.width;\n var rw = this.frame.width - (mw + lw);\n\n // top / center / bottom height\n var th = this.rect.y;\n var ch = this.rect.height;\n var bh = this.frame.height - (ch + th);\n\n var rightX = this._width - rw;\n var bottomY = this._height - bh;\n if (this.cr) {\n this.cr.x = rightX;\n }\n if (this.br) {\n this.br.x = rightX;\n this.br.y = bottomY;\n }\n if (this.tr) {\n this.tr.x = rightX;\n }\n\n var middleWidth = this._width - (lw + rw);\n var centerHeight = this._height - (th + bh);\n if (this.cm) {\n this.cm.width = middleWidth;\n this.cm.height = centerHeight;\n }\n if (this.bm) {\n this.bm.width = middleWidth;\n this.bm.y = bottomY;\n }\n if (this.tm) {\n this.tm.width = middleWidth;\n }\n if (this.cl) {\n this.cl.height = centerHeight;\n }\n if (this.cr) {\n this.cr.height = centerHeight;\n }\n\n if (this.bl) {\n this.bl.y = bottomY;\n }\n};\n\n/**\n *\n * Helper function that creates a sprite that will contain a texture from the TextureCache based on the frameId\n * The frame ids are created when a Texture packer file has been loaded\n *\n * @method fromFrame\n * @static\n * @param frameId {String} The frame Id of the texture in the cache\n * @param rect {Rectangle} defines tilable area\n * @return {ScaleTexture} A new Scalable Texture (e.g. a button) using a texture from the texture cache matching the frameId\n */\nScaleContainer.fromFrame = function(frameId, rect) {\n var texture = PIXI.utils.TextureCache[frameId];\n if(!texture) {\n throw new Error('The frameId \"' + frameId + '\" does not exist ' +\n 'in the texture cache');\n }\n return new ScaleContainer(texture, rect);\n};\n","/**\n * Holds all information related to a Slider change event\n *\n * @class SliderData\n * @memberof GOWN\n * @constructor\n */\nfunction SliderData()\n{\n this.value = 0;\n /**\n * The target Sprite that was interacted with\n *\n * @property target\n * @type Sprite\n */\n this.target = null;\n}\n\nmodule.exports = SliderData;\n","/**\n * @file Main export of the gown.js util library\n * @author Andreas Bresser <andreasbresser@gmail.com>\n * @copyright 2015 Andreas Bresser\n * @license {@link https://github.com/brean/gown.js/blob/master/LICENSE|Apache License}\n */\n\n/**\n * @namespace GOWN.util\n */\nmodule.exports = {\n InputWrapper: require('./InputWrapper'),\n mouseWheelSupport: require('./mouseWheelSupport'),\n position: require('./position'),\n ScaleContainer: require('./ScaleContainer'),\n SliderData: require('./SliderData'),\n resizeScaling: require('./resizeScaling'),\n mixin: require('./mixin')\n};\n","module.exports = function(destination, source) {\n for (var key in source) {\n if (source.hasOwnProperty(key)) {\n if(key === 'defineProperty') {\n for (var name in source[key]) {\n var data = source[key][name];\n if (data.configurable === undefined) {\n // We change our default case, so that we can\n // overwrite properties later on\n data.configurable = true;\n }\n Object.defineProperty(destination, name, data);\n }\n } else {\n destination[key] = source[key];\n }\n }\n }\n return destination;\n};\n","/**\n * TODO: make it work with PIXI (this is just copied from createjs_ui / WIP)\n * (e.g. get currently selected object using this.stage.interactionManager.hitTest(this, e)\n * and then execute an \"onwheel\"-callback)\n *\n * enable or disable mouse wheel support for canvas (e.g. for scroller)\n * using HTML 5 scrolling. will do nothing if it is already activated/\n * deactivated\n * based on http://www.sitepoint.com/html5-javascript-mouse-wheel/\n * @param stage the PIXI-stage\n * @param enable true to enable mouse support, false to disable,\n */\nfunction mouseWheelSupport(stage, enable) {\n var canvas = stage.canvas;\n if (enable || enable === undefined) {\n if (GOWN._mouseWheelHandler !== undefined) {\n return;\n }\n GOWN._mouseWheelHandler = function(event) {\n event = window.event || event;\n var delta = Math.max(-1, Math.min(1,\n (event.wheelDelta || -event.detail)));\n\n var target = stage.getObjectsUnderPoint(stage.mouseX, stage.mouseY, 1);\n if (!target) {\n return;\n }\n for(var i = 0; i < target.length; i++) {\n var t = target[i];\n t.mouseMove(delta);\n /*\n var evt = new createjs.MouseEvent(\n \"mousewheel\", true, false,\n t.x, t.y, event, -1, true, t.rawX, t.rawY);\n evt.delta = delta;\n t.dispatchEvent(evt);\n */\n }\n };\n if (canvas.addEventListener) {\n canvas.addEventListener('mousewheel',\n GOWN._mouseWheelHandler, false);\n canvas.addEventListener('DOMMouseScroll',\n GOWN._mouseWheelHandler, false);\n } else {\n canvas.attachEvent('onmousewheel',\n GOWN._mouseWheelHandler);\n }\n } else {\n if (GOWN._mouseWheelHandler === undefined) {\n return;\n }\n if (canvas.removeEventListener) {\n canvas.removeEventListener('mousewheel',\n GOWN._mouseWheelHandler);\n canvas.removeEventListener('DOMMouseScroll',\n GOWN._mouseWheelHandler);\n } else {\n canvas.detachEvent('onmousewheel',\n GOWN._mouseWheelHandler);\n }\n GOWN._mouseWheelHandler = undefined;\n }\n}\n\nmodule.exports = mouseWheelSupport;","/**\n * center element on parent vertically\n * @param elem\n * @param parent (optional)\n * @method centerVertical\n */\nfunction centerVertical(elem, parent) {\n parent = parent || elem.parent;\n elem.y = Math.floor((parent.height - elem.height ) / 2);\n}\n\n/**\n *\n * @param elem\n * @param parent (optional)\n */\nfunction bottom(elem, parent) {\n parent = parent || elem.parent;\n elem.y = parent.height - elem.height;\n}\n\n/**\n * center element on parent horizontally\n * @param elem\n * @param parent (optional)\n * @method centerHorizontal\n */\nfunction centerHorizontal(elem, parent) {\n parent = parent || elem.parent;\n elem.x = Math.floor((parent.width - elem.width ) / 2);\n}\n\n\n/**\n * center element on parent\n * @param elem\n * @param parent (optional)\n * @method center\n */\nfunction center(elem, parent) {\n centerVertical(elem, parent);\n centerHorizontal(elem, parent);\n}\n\n\nmodule.exports = {\n centerHorizontal: centerHorizontal,\n centerVertical: centerVertical,\n center: center,\n bottom: bottom\n};","\nmodule.exports = {\n /**\n * this should be called from inside the constructor\n *\n * @method initResizeScaling\n */\n initResizeScaling: function() {\n this.resizeScaling = true; // resize instead of scale\n\n this.minWidth = 1;\n this.minHeight = 1;\n\n // update dimension flag\n this._lastWidth = NaN;\n this._lastHeight = NaN;\n },\n\n /**\n * update before draw call\n * redraw control for current state from theme\n *\n * @method redraw\n */\n redraw: function() {\n // remove last skin after new one has been added\n // (just before rendering, otherwise we would see nothing for a frame)\n if (this._lastSkin) {\n //this.removeChild(this._lastSkin);\n this._lastSkin.alpha = 0;\n this._lastSkin = null;\n }\n if (this.invalidState) {\n this.fromSkin(this._currentState, this.changeSkin);\n }\n var width = this.worldWidth;\n var height = this.worldHeight;\n if (this._currentSkin &&\n (this._lastWidth !== width || this._lastHeight !== height) &&\n width > 0 && height > 0) {\n\n this._currentSkin.width = this._lastWidth = width;\n this._currentSkin.height = this._lastHeight = height;\n this.updateDimensions();\n }\n },\n\n updateDimensions: function() {\n },\n\n\n updateTransform: function() {\n var wt = this.worldTransform;\n var scaleX = 1;\n var scaleY = 1;\n\n if(this.redraw) {\n\n if(this.resizeScaling) {\n var pt = this.parent.worldTransform;\n\n scaleX = Math.sqrt(Math.pow(pt.a, 2) + Math.pow(pt.b, 2));\n scaleY = Math.sqrt(Math.pow(pt.c, 2) + Math.pow(pt.d, 2));\n }\n\n this.worldWidth = Math.round(Math.max(this._width * scaleX, this.minWidth));\n this.worldHeight = Math.round(Math.max(this._height * scaleY, this.minHeight));\n this.redraw();\n }\n\n // obmit Control.updateTransform as it calls redraw as well\n if(!this.resizeScaling) {\n PIXI.Container.prototype.updateTransform.call(this);\n } else {\n PIXI.DisplayObject.prototype.updateTransform.call(this);\n\n // revert scaling\n var tx = wt.tx;\n var ty = wt.ty;\n scaleX = scaleX !== 0 ? 1/scaleX : 0;\n scaleY = scaleY !== 0 ? 1/scaleY : 0;\n wt.scale(scaleX, scaleY);\n wt.tx = tx;\n wt.ty = ty;\n\n for (var i = 0, j = this.children.length; i < j; ++i) {\n this.children[i].updateTransform();\n }\n }\n },\n\n defineProperty: {\n\n 'height': {\n get: function() {\n return this._height;\n },\n set: function(value) {\n this._height = value;\n this.minHeight = Math.min(value, this.minHeight);\n }\n },\n 'width': {\n get: function() {\n return this._width;\n },\n set: function(value) {\n this._width = value;\n this.minWidth = Math.min(value, this.minWidth);\n }\n }\n }\n};\n"],"sourceRoot":"./"}